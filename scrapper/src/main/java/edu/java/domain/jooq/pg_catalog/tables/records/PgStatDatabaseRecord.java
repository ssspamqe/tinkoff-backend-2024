/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgStatDatabase;

import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatDatabaseRecord extends TableRecordImpl<PgStatDatabaseRecord> {

    private static final long serialVersionUID = 1L;

    public void setDatid(@Nullable Long value) {
        set(0, value);
    }

    @Nullable
    public Long getDatid() {
        return (Long) get(0);
    }

    public void setDatname(@Nullable String value) {
        set(1, value);
    }

    @Nullable
    public String getDatname() {
        return (String) get(1);
    }

    public void setNumbackends(@Nullable Integer value) {
        set(2, value);
    }

    @Nullable
    public Integer getNumbackends() {
        return (Integer) get(2);
    }

    public void setXactCommit(@Nullable Long value) {
        set(3, value);
    }

    @Nullable
    public Long getXactCommit() {
        return (Long) get(3);
    }

    public void setXactRollback(@Nullable Long value) {
        set(4, value);
    }

    @Nullable
    public Long getXactRollback() {
        return (Long) get(4);
    }

    public void setBlksRead(@Nullable Long value) {
        set(5, value);
    }

    @Nullable
    public Long getBlksRead() {
        return (Long) get(5);
    }

    public void setBlksHit(@Nullable Long value) {
        set(6, value);
    }

    @Nullable
    public Long getBlksHit() {
        return (Long) get(6);
    }

    public void setTupReturned(@Nullable Long value) {
        set(7, value);
    }

    @Nullable
    public Long getTupReturned() {
        return (Long) get(7);
    }

    public void setTupFetched(@Nullable Long value) {
        set(8, value);
    }

    @Nullable
    public Long getTupFetched() {
        return (Long) get(8);
    }

    public void setTupInserted(@Nullable Long value) {
        set(9, value);
    }

    @Nullable
    public Long getTupInserted() {
        return (Long) get(9);
    }

    public void setTupUpdated(@Nullable Long value) {
        set(10, value);
    }

    @Nullable
    public Long getTupUpdated() {
        return (Long) get(10);
    }

    public void setTupDeleted(@Nullable Long value) {
        set(11, value);
    }

    @Nullable
    public Long getTupDeleted() {
        return (Long) get(11);
    }

    public void setConflicts(@Nullable Long value) {
        set(12, value);
    }

    @Nullable
    public Long getConflicts() {
        return (Long) get(12);
    }

    public void setTempFiles(@Nullable Long value) {
        set(13, value);
    }

    @Nullable
    public Long getTempFiles() {
        return (Long) get(13);
    }

    public void setTempBytes(@Nullable Long value) {
        set(14, value);
    }

    @Nullable
    public Long getTempBytes() {
        return (Long) get(14);
    }

    public void setDeadlocks(@Nullable Long value) {
        set(15, value);
    }

    @Nullable
    public Long getDeadlocks() {
        return (Long) get(15);
    }

    public void setChecksumFailures(@Nullable Long value) {
        set(16, value);
    }

    @Nullable
    public Long getChecksumFailures() {
        return (Long) get(16);
    }

    public void setChecksumLastFailure(@Nullable OffsetDateTime value) {
        set(17, value);
    }

    @Nullable
    public OffsetDateTime getChecksumLastFailure() {
        return (OffsetDateTime) get(17);
    }

    public void setBlkReadTime(@Nullable Double value) {
        set(18, value);
    }

    @Nullable
    public Double getBlkReadTime() {
        return (Double) get(18);
    }

    public void setBlkWriteTime(@Nullable Double value) {
        set(19, value);
    }

    @Nullable
    public Double getBlkWriteTime() {
        return (Double) get(19);
    }

    public void setSessionTime(@Nullable Double value) {
        set(20, value);
    }

    @Nullable
    public Double getSessionTime() {
        return (Double) get(20);
    }

    public void setActiveTime(@Nullable Double value) {
        set(21, value);
    }

    @Nullable
    public Double getActiveTime() {
        return (Double) get(21);
    }

    public void setIdleInTransactionTime(@Nullable Double value) {
        set(22, value);
    }

    @Nullable
    public Double getIdleInTransactionTime() {
        return (Double) get(22);
    }

    public void setSessions(@Nullable Long value) {
        set(23, value);
    }

    @Nullable
    public Long getSessions() {
        return (Long) get(23);
    }

    public void setSessionsAbandoned(@Nullable Long value) {
        set(24, value);
    }

    @Nullable
    public Long getSessionsAbandoned() {
        return (Long) get(24);
    }

    public void setSessionsFatal(@Nullable Long value) {
        set(25, value);
    }

    @Nullable
    public Long getSessionsFatal() {
        return (Long) get(25);
    }

    public void setSessionsKilled(@Nullable Long value) {
        set(26, value);
    }

    @Nullable
    public Long getSessionsKilled() {
        return (Long) get(26);
    }

    public void setStatsReset(@Nullable OffsetDateTime value) {
        set(27, value);
    }

    @Nullable
    public OffsetDateTime getStatsReset() {
        return (OffsetDateTime) get(27);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PgStatDatabaseRecord() {
        super(PgStatDatabase.PG_STAT_DATABASE);
    }

    @ConstructorProperties({ "datid", "datname", "numbackends", "xactCommit", "xactRollback", "blksRead", "blksHit", "tupReturned", "tupFetched", "tupInserted", "tupUpdated", "tupDeleted", "conflicts", "tempFiles", "tempBytes", "deadlocks", "checksumFailures", "checksumLastFailure", "blkReadTime", "blkWriteTime", "sessionTime", "activeTime", "idleInTransactionTime", "sessions", "sessionsAbandoned", "sessionsFatal", "sessionsKilled", "statsReset" })
    public PgStatDatabaseRecord(@Nullable Long datid, @Nullable String datname, @Nullable Integer numbackends, @Nullable Long xactCommit, @Nullable Long xactRollback, @Nullable Long blksRead, @Nullable Long blksHit, @Nullable Long tupReturned, @Nullable Long tupFetched, @Nullable Long tupInserted, @Nullable Long tupUpdated, @Nullable Long tupDeleted, @Nullable Long conflicts, @Nullable Long tempFiles, @Nullable Long tempBytes, @Nullable Long deadlocks, @Nullable Long checksumFailures, @Nullable OffsetDateTime checksumLastFailure, @Nullable Double blkReadTime, @Nullable Double blkWriteTime, @Nullable Double sessionTime, @Nullable Double activeTime, @Nullable Double idleInTransactionTime, @Nullable Long sessions, @Nullable Long sessionsAbandoned, @Nullable Long sessionsFatal, @Nullable Long sessionsKilled, @Nullable OffsetDateTime statsReset) {
        super(PgStatDatabase.PG_STAT_DATABASE);

        setDatid(datid);
        setDatname(datname);
        setNumbackends(numbackends);
        setXactCommit(xactCommit);
        setXactRollback(xactRollback);
        setBlksRead(blksRead);
        setBlksHit(blksHit);
        setTupReturned(tupReturned);
        setTupFetched(tupFetched);
        setTupInserted(tupInserted);
        setTupUpdated(tupUpdated);
        setTupDeleted(tupDeleted);
        setConflicts(conflicts);
        setTempFiles(tempFiles);
        setTempBytes(tempBytes);
        setDeadlocks(deadlocks);
        setChecksumFailures(checksumFailures);
        setChecksumLastFailure(checksumLastFailure);
        setBlkReadTime(blkReadTime);
        setBlkWriteTime(blkWriteTime);
        setSessionTime(sessionTime);
        setActiveTime(activeTime);
        setIdleInTransactionTime(idleInTransactionTime);
        setSessions(sessions);
        setSessionsAbandoned(sessionsAbandoned);
        setSessionsFatal(sessionsFatal);
        setSessionsKilled(sessionsKilled);
        setStatsReset(statsReset);
        resetChangedOnNotNull();
    }

    public PgStatDatabaseRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgStatDatabase value) {
        super(PgStatDatabase.PG_STAT_DATABASE);

        if (value != null) {
            setDatid(value.getDatid());
            setDatname(value.getDatname());
            setNumbackends(value.getNumbackends());
            setXactCommit(value.getXactCommit());
            setXactRollback(value.getXactRollback());
            setBlksRead(value.getBlksRead());
            setBlksHit(value.getBlksHit());
            setTupReturned(value.getTupReturned());
            setTupFetched(value.getTupFetched());
            setTupInserted(value.getTupInserted());
            setTupUpdated(value.getTupUpdated());
            setTupDeleted(value.getTupDeleted());
            setConflicts(value.getConflicts());
            setTempFiles(value.getTempFiles());
            setTempBytes(value.getTempBytes());
            setDeadlocks(value.getDeadlocks());
            setChecksumFailures(value.getChecksumFailures());
            setChecksumLastFailure(value.getChecksumLastFailure());
            setBlkReadTime(value.getBlkReadTime());
            setBlkWriteTime(value.getBlkWriteTime());
            setSessionTime(value.getSessionTime());
            setActiveTime(value.getActiveTime());
            setIdleInTransactionTime(value.getIdleInTransactionTime());
            setSessions(value.getSessions());
            setSessionsAbandoned(value.getSessionsAbandoned());
            setSessionsFatal(value.getSessionsFatal());
            setSessionsKilled(value.getSessionsKilled());
            setStatsReset(value.getStatsReset());
            resetChangedOnNotNull();
        }
    }
}
