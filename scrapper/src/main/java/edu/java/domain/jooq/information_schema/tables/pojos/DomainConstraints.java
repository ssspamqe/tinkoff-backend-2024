/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.pojos;


import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;
import java.io.Serializable;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DomainConstraints implements Serializable {

    private static final long serialVersionUID = 1L;

    private String constraintCatalog;
    private String constraintSchema;
    private String constraintName;
    private String domainCatalog;
    private String domainSchema;
    private String domainName;
    private String isDeferrable;
    private String initiallyDeferred;

    public DomainConstraints() {}

    public DomainConstraints(DomainConstraints value) {
        this.constraintCatalog = value.constraintCatalog;
        this.constraintSchema = value.constraintSchema;
        this.constraintName = value.constraintName;
        this.domainCatalog = value.domainCatalog;
        this.domainSchema = value.domainSchema;
        this.domainName = value.domainName;
        this.isDeferrable = value.isDeferrable;
        this.initiallyDeferred = value.initiallyDeferred;
    }

    @ConstructorProperties({ "constraintCatalog", "constraintSchema", "constraintName", "domainCatalog", "domainSchema", "domainName", "isDeferrable", "initiallyDeferred" })
    public DomainConstraints(
        @Nullable String constraintCatalog,
        @Nullable String constraintSchema,
        @Nullable String constraintName,
        @Nullable String domainCatalog,
        @Nullable String domainSchema,
        @Nullable String domainName,
        @Nullable String isDeferrable,
        @Nullable String initiallyDeferred
    ) {
        this.constraintCatalog = constraintCatalog;
        this.constraintSchema = constraintSchema;
        this.constraintName = constraintName;
        this.domainCatalog = domainCatalog;
        this.domainSchema = domainSchema;
        this.domainName = domainName;
        this.isDeferrable = isDeferrable;
        this.initiallyDeferred = initiallyDeferred;
    }

    @Nullable
    public String getConstraintCatalog() {
        return this.constraintCatalog;
    }

    public void setConstraintCatalog(@Nullable String constraintCatalog) {
        this.constraintCatalog = constraintCatalog;
    }

    @Nullable
    public String getConstraintSchema() {
        return this.constraintSchema;
    }

    public void setConstraintSchema(@Nullable String constraintSchema) {
        this.constraintSchema = constraintSchema;
    }

    @Nullable
    public String getConstraintName() {
        return this.constraintName;
    }

    public void setConstraintName(@Nullable String constraintName) {
        this.constraintName = constraintName;
    }

    @Nullable
    public String getDomainCatalog() {
        return this.domainCatalog;
    }

    public void setDomainCatalog(@Nullable String domainCatalog) {
        this.domainCatalog = domainCatalog;
    }

    @Nullable
    public String getDomainSchema() {
        return this.domainSchema;
    }

    public void setDomainSchema(@Nullable String domainSchema) {
        this.domainSchema = domainSchema;
    }

    @Nullable
    public String getDomainName() {
        return this.domainName;
    }

    public void setDomainName(@Nullable String domainName) {
        this.domainName = domainName;
    }

    @Size(max = 3)
    @Nullable
    public String getIsDeferrable() {
        return this.isDeferrable;
    }

    public void setIsDeferrable(@Nullable String isDeferrable) {
        this.isDeferrable = isDeferrable;
    }

    @Size(max = 3)
    @Nullable
    public String getInitiallyDeferred() {
        return this.initiallyDeferred;
    }

    public void setInitiallyDeferred(@Nullable String initiallyDeferred) {
        this.initiallyDeferred = initiallyDeferred;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DomainConstraints other = (DomainConstraints) obj;
        if (this.constraintCatalog == null) {
            if (other.constraintCatalog != null)
                return false;
        }
        else if (!this.constraintCatalog.equals(other.constraintCatalog))
            return false;
        if (this.constraintSchema == null) {
            if (other.constraintSchema != null)
                return false;
        }
        else if (!this.constraintSchema.equals(other.constraintSchema))
            return false;
        if (this.constraintName == null) {
            if (other.constraintName != null)
                return false;
        }
        else if (!this.constraintName.equals(other.constraintName))
            return false;
        if (this.domainCatalog == null) {
            if (other.domainCatalog != null)
                return false;
        }
        else if (!this.domainCatalog.equals(other.domainCatalog))
            return false;
        if (this.domainSchema == null) {
            if (other.domainSchema != null)
                return false;
        }
        else if (!this.domainSchema.equals(other.domainSchema))
            return false;
        if (this.domainName == null) {
            if (other.domainName != null)
                return false;
        }
        else if (!this.domainName.equals(other.domainName))
            return false;
        if (this.isDeferrable == null) {
            if (other.isDeferrable != null)
                return false;
        }
        else if (!this.isDeferrable.equals(other.isDeferrable))
            return false;
        if (this.initiallyDeferred == null) {
            if (other.initiallyDeferred != null)
                return false;
        }
        else if (!this.initiallyDeferred.equals(other.initiallyDeferred))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.constraintCatalog == null) ? 0 : this.constraintCatalog.hashCode());
        result = prime * result + ((this.constraintSchema == null) ? 0 : this.constraintSchema.hashCode());
        result = prime * result + ((this.constraintName == null) ? 0 : this.constraintName.hashCode());
        result = prime * result + ((this.domainCatalog == null) ? 0 : this.domainCatalog.hashCode());
        result = prime * result + ((this.domainSchema == null) ? 0 : this.domainSchema.hashCode());
        result = prime * result + ((this.domainName == null) ? 0 : this.domainName.hashCode());
        result = prime * result + ((this.isDeferrable == null) ? 0 : this.isDeferrable.hashCode());
        result = prime * result + ((this.initiallyDeferred == null) ? 0 : this.initiallyDeferred.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DomainConstraints (");

        sb.append(constraintCatalog);
        sb.append(", ").append(constraintSchema);
        sb.append(", ").append(constraintName);
        sb.append(", ").append(domainCatalog);
        sb.append(", ").append(domainSchema);
        sb.append(", ").append(domainName);
        sb.append(", ").append(isDeferrable);
        sb.append(", ").append(initiallyDeferred);

        sb.append(")");
        return sb.toString();
    }
}
