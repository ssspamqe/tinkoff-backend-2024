/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgStatProgressCreateIndex;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatProgressCreateIndexRecord extends TableRecordImpl<PgStatProgressCreateIndexRecord> {

    private static final long serialVersionUID = 1L;

    public void setPid(@Nullable Integer value) {
        set(0, value);
    }

    @Nullable
    public Integer getPid() {
        return (Integer) get(0);
    }

    public void setDatid(@Nullable Long value) {
        set(1, value);
    }

    @Nullable
    public Long getDatid() {
        return (Long) get(1);
    }

    public void setDatname(@Nullable String value) {
        set(2, value);
    }

    @Nullable
    public String getDatname() {
        return (String) get(2);
    }

    public void setRelid(@Nullable Long value) {
        set(3, value);
    }

    @Nullable
    public Long getRelid() {
        return (Long) get(3);
    }

    public void setIndexRelid(@Nullable Long value) {
        set(4, value);
    }

    @Nullable
    public Long getIndexRelid() {
        return (Long) get(4);
    }

    public void setCommand(@Nullable String value) {
        set(5, value);
    }

    @Nullable
    public String getCommand() {
        return (String) get(5);
    }

    public void setPhase(@Nullable String value) {
        set(6, value);
    }

    @Nullable
    public String getPhase() {
        return (String) get(6);
    }

    public void setLockersTotal(@Nullable Long value) {
        set(7, value);
    }

    @Nullable
    public Long getLockersTotal() {
        return (Long) get(7);
    }

    public void setLockersDone(@Nullable Long value) {
        set(8, value);
    }

    @Nullable
    public Long getLockersDone() {
        return (Long) get(8);
    }

    public void setCurrentLockerPid(@Nullable Long value) {
        set(9, value);
    }

    @Nullable
    public Long getCurrentLockerPid() {
        return (Long) get(9);
    }

    public void setBlocksTotal(@Nullable Long value) {
        set(10, value);
    }

    @Nullable
    public Long getBlocksTotal() {
        return (Long) get(10);
    }

    public void setBlocksDone(@Nullable Long value) {
        set(11, value);
    }

    @Nullable
    public Long getBlocksDone() {
        return (Long) get(11);
    }

    public void setTuplesTotal(@Nullable Long value) {
        set(12, value);
    }

    @Nullable
    public Long getTuplesTotal() {
        return (Long) get(12);
    }

    public void setTuplesDone(@Nullable Long value) {
        set(13, value);
    }

    @Nullable
    public Long getTuplesDone() {
        return (Long) get(13);
    }

    public void setPartitionsTotal(@Nullable Long value) {
        set(14, value);
    }

    @Nullable
    public Long getPartitionsTotal() {
        return (Long) get(14);
    }

    public void setPartitionsDone(@Nullable Long value) {
        set(15, value);
    }

    @Nullable
    public Long getPartitionsDone() {
        return (Long) get(15);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PgStatProgressCreateIndexRecord() {
        super(PgStatProgressCreateIndex.PG_STAT_PROGRESS_CREATE_INDEX);
    }

    @ConstructorProperties({ "pid", "datid", "datname", "relid", "indexRelid", "command", "phase", "lockersTotal", "lockersDone", "currentLockerPid", "blocksTotal", "blocksDone", "tuplesTotal", "tuplesDone", "partitionsTotal", "partitionsDone" })
    public PgStatProgressCreateIndexRecord(@Nullable Integer pid, @Nullable Long datid, @Nullable String datname, @Nullable Long relid, @Nullable Long indexRelid, @Nullable String command, @Nullable String phase, @Nullable Long lockersTotal, @Nullable Long lockersDone, @Nullable Long currentLockerPid, @Nullable Long blocksTotal, @Nullable Long blocksDone, @Nullable Long tuplesTotal, @Nullable Long tuplesDone, @Nullable Long partitionsTotal, @Nullable Long partitionsDone) {
        super(PgStatProgressCreateIndex.PG_STAT_PROGRESS_CREATE_INDEX);

        setPid(pid);
        setDatid(datid);
        setDatname(datname);
        setRelid(relid);
        setIndexRelid(indexRelid);
        setCommand(command);
        setPhase(phase);
        setLockersTotal(lockersTotal);
        setLockersDone(lockersDone);
        setCurrentLockerPid(currentLockerPid);
        setBlocksTotal(blocksTotal);
        setBlocksDone(blocksDone);
        setTuplesTotal(tuplesTotal);
        setTuplesDone(tuplesDone);
        setPartitionsTotal(partitionsTotal);
        setPartitionsDone(partitionsDone);
        resetChangedOnNotNull();
    }

    public PgStatProgressCreateIndexRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgStatProgressCreateIndex value) {
        super(PgStatProgressCreateIndex.PG_STAT_PROGRESS_CREATE_INDEX);

        if (value != null) {
            setPid(value.getPid());
            setDatid(value.getDatid());
            setDatname(value.getDatname());
            setRelid(value.getRelid());
            setIndexRelid(value.getIndexRelid());
            setCommand(value.getCommand());
            setPhase(value.getPhase());
            setLockersTotal(value.getLockersTotal());
            setLockersDone(value.getLockersDone());
            setCurrentLockerPid(value.getCurrentLockerPid());
            setBlocksTotal(value.getBlocksTotal());
            setBlocksDone(value.getBlocksDone());
            setTuplesTotal(value.getTuplesTotal());
            setTuplesDone(value.getTuplesDone());
            setPartitionsTotal(value.getPartitionsTotal());
            setPartitionsDone(value.getPartitionsDone());
            resetChangedOnNotNull();
        }
    }
}
