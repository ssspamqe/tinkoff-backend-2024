/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables;


import edu.java.domain.jooq.pg_catalog.PgCatalog;
import edu.java.domain.jooq.pg_catalog.tables.records.PgStatProgressClusterRecord;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatProgressCluster extends TableImpl<PgStatProgressClusterRecord> {

    private static final long serialVersionUID = 1L;

    public static final PgStatProgressCluster PG_STAT_PROGRESS_CLUSTER = new PgStatProgressCluster();

    @Override
    @NotNull
    public Class<PgStatProgressClusterRecord> getRecordType() {
        return PgStatProgressClusterRecord.class;
    }

    public final TableField<PgStatProgressClusterRecord, Integer> PID = createField(DSL.name("pid"), SQLDataType.INTEGER, this, "");

    public final TableField<PgStatProgressClusterRecord, Long> DATID = createField(DSL.name("datid"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressClusterRecord, String> DATNAME = createField(DSL.name("datname"), SQLDataType.VARCHAR, this, "");

    public final TableField<PgStatProgressClusterRecord, Long> RELID = createField(DSL.name("relid"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressClusterRecord, String> COMMAND = createField(DSL.name("command"), SQLDataType.CLOB, this, "");

    public final TableField<PgStatProgressClusterRecord, String> PHASE = createField(DSL.name("phase"), SQLDataType.CLOB, this, "");

    public final TableField<PgStatProgressClusterRecord, Long> CLUSTER_INDEX_RELID = createField(DSL.name("cluster_index_relid"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressClusterRecord, Long> HEAP_TUPLES_SCANNED = createField(DSL.name("heap_tuples_scanned"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressClusterRecord, Long> HEAP_TUPLES_WRITTEN = createField(DSL.name("heap_tuples_written"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressClusterRecord, Long> HEAP_BLKS_TOTAL = createField(DSL.name("heap_blks_total"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressClusterRecord, Long> HEAP_BLKS_SCANNED = createField(DSL.name("heap_blks_scanned"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressClusterRecord, Long> INDEX_REBUILD_COUNT = createField(DSL.name("index_rebuild_count"), SQLDataType.BIGINT, this, "");

    private PgStatProgressCluster(Name alias, Table<PgStatProgressClusterRecord> aliased) {
        this(alias, aliased, null);
    }

    private PgStatProgressCluster(Name alias, Table<PgStatProgressClusterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view());
    }

    public PgStatProgressCluster(String alias) {
        this(DSL.name(alias), PG_STAT_PROGRESS_CLUSTER);
    }

    public PgStatProgressCluster(Name alias) {
        this(alias, PG_STAT_PROGRESS_CLUSTER);
    }

    public PgStatProgressCluster() {
        this(DSL.name("pg_stat_progress_cluster"), null);
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : PgCatalog.PG_CATALOG;
    }

    @Override
    @NotNull
    public PgStatProgressCluster as(String alias) {
        return new PgStatProgressCluster(DSL.name(alias), this);
    }

    @Override
    @NotNull
    public PgStatProgressCluster as(Name alias) {
        return new PgStatProgressCluster(alias, this);
    }

    @Override
    @NotNull
    public PgStatProgressCluster as(Table<?> alias) {
        return new PgStatProgressCluster(alias.getQualifiedName(), this);
    }

    @Override
    @NotNull
    public PgStatProgressCluster rename(String name) {
        return new PgStatProgressCluster(DSL.name(name), null);
    }

    @Override
    @NotNull
    public PgStatProgressCluster rename(Name name) {
        return new PgStatProgressCluster(name, null);
    }

    @Override
    @NotNull
    public PgStatProgressCluster rename(Table<?> name) {
        return new PgStatProgressCluster(name.getQualifiedName(), null);
    }
}
