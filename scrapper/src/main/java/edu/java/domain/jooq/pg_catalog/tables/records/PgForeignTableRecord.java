/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgForeignTable;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgForeignTableRecord extends TableRecordImpl<PgForeignTableRecord> {

    private static final long serialVersionUID = 1L;

    public void setFtrelid(@NotNull Long value) {
        set(0, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getFtrelid() {
        return (Long) get(0);
    }

    public void setFtserver(@NotNull Long value) {
        set(1, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getFtserver() {
        return (Long) get(1);
    }

    public void setFtoptions(@Nullable String[] value) {
        set(2, value);
    }

    @Nullable
    public String[] getFtoptions() {
        return (String[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PgForeignTableRecord() {
        super(PgForeignTable.PG_FOREIGN_TABLE);
    }

    @ConstructorProperties({ "ftrelid", "ftserver", "ftoptions" })
    public PgForeignTableRecord(@NotNull Long ftrelid, @NotNull Long ftserver, @Nullable String[] ftoptions) {
        super(PgForeignTable.PG_FOREIGN_TABLE);

        setFtrelid(ftrelid);
        setFtserver(ftserver);
        setFtoptions(ftoptions);
        resetChangedOnNotNull();
    }

    public PgForeignTableRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgForeignTable value) {
        super(PgForeignTable.PG_FOREIGN_TABLE);

        if (value != null) {
            setFtrelid(value.getFtrelid());
            setFtserver(value.getFtserver());
            setFtoptions(value.getFtoptions());
            resetChangedOnNotNull();
        }
    }
}
