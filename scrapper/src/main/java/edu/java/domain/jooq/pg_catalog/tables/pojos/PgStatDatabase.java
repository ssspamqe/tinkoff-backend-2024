/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatDatabase implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long datid;
    private String datname;
    private Integer numbackends;
    private Long xactCommit;
    private Long xactRollback;
    private Long blksRead;
    private Long blksHit;
    private Long tupReturned;
    private Long tupFetched;
    private Long tupInserted;
    private Long tupUpdated;
    private Long tupDeleted;
    private Long conflicts;
    private Long tempFiles;
    private Long tempBytes;
    private Long deadlocks;
    private Long checksumFailures;
    private OffsetDateTime checksumLastFailure;
    private Double blkReadTime;
    private Double blkWriteTime;
    private Double sessionTime;
    private Double activeTime;
    private Double idleInTransactionTime;
    private Long sessions;
    private Long sessionsAbandoned;
    private Long sessionsFatal;
    private Long sessionsKilled;
    private OffsetDateTime statsReset;

    public PgStatDatabase() {}

    public PgStatDatabase(PgStatDatabase value) {
        this.datid = value.datid;
        this.datname = value.datname;
        this.numbackends = value.numbackends;
        this.xactCommit = value.xactCommit;
        this.xactRollback = value.xactRollback;
        this.blksRead = value.blksRead;
        this.blksHit = value.blksHit;
        this.tupReturned = value.tupReturned;
        this.tupFetched = value.tupFetched;
        this.tupInserted = value.tupInserted;
        this.tupUpdated = value.tupUpdated;
        this.tupDeleted = value.tupDeleted;
        this.conflicts = value.conflicts;
        this.tempFiles = value.tempFiles;
        this.tempBytes = value.tempBytes;
        this.deadlocks = value.deadlocks;
        this.checksumFailures = value.checksumFailures;
        this.checksumLastFailure = value.checksumLastFailure;
        this.blkReadTime = value.blkReadTime;
        this.blkWriteTime = value.blkWriteTime;
        this.sessionTime = value.sessionTime;
        this.activeTime = value.activeTime;
        this.idleInTransactionTime = value.idleInTransactionTime;
        this.sessions = value.sessions;
        this.sessionsAbandoned = value.sessionsAbandoned;
        this.sessionsFatal = value.sessionsFatal;
        this.sessionsKilled = value.sessionsKilled;
        this.statsReset = value.statsReset;
    }

    @ConstructorProperties({ "datid", "datname", "numbackends", "xactCommit", "xactRollback", "blksRead", "blksHit", "tupReturned", "tupFetched", "tupInserted", "tupUpdated", "tupDeleted", "conflicts", "tempFiles", "tempBytes", "deadlocks", "checksumFailures", "checksumLastFailure", "blkReadTime", "blkWriteTime", "sessionTime", "activeTime", "idleInTransactionTime", "sessions", "sessionsAbandoned", "sessionsFatal", "sessionsKilled", "statsReset" })
    public PgStatDatabase(
        @Nullable Long datid,
        @Nullable String datname,
        @Nullable Integer numbackends,
        @Nullable Long xactCommit,
        @Nullable Long xactRollback,
        @Nullable Long blksRead,
        @Nullable Long blksHit,
        @Nullable Long tupReturned,
        @Nullable Long tupFetched,
        @Nullable Long tupInserted,
        @Nullable Long tupUpdated,
        @Nullable Long tupDeleted,
        @Nullable Long conflicts,
        @Nullable Long tempFiles,
        @Nullable Long tempBytes,
        @Nullable Long deadlocks,
        @Nullable Long checksumFailures,
        @Nullable OffsetDateTime checksumLastFailure,
        @Nullable Double blkReadTime,
        @Nullable Double blkWriteTime,
        @Nullable Double sessionTime,
        @Nullable Double activeTime,
        @Nullable Double idleInTransactionTime,
        @Nullable Long sessions,
        @Nullable Long sessionsAbandoned,
        @Nullable Long sessionsFatal,
        @Nullable Long sessionsKilled,
        @Nullable OffsetDateTime statsReset
    ) {
        this.datid = datid;
        this.datname = datname;
        this.numbackends = numbackends;
        this.xactCommit = xactCommit;
        this.xactRollback = xactRollback;
        this.blksRead = blksRead;
        this.blksHit = blksHit;
        this.tupReturned = tupReturned;
        this.tupFetched = tupFetched;
        this.tupInserted = tupInserted;
        this.tupUpdated = tupUpdated;
        this.tupDeleted = tupDeleted;
        this.conflicts = conflicts;
        this.tempFiles = tempFiles;
        this.tempBytes = tempBytes;
        this.deadlocks = deadlocks;
        this.checksumFailures = checksumFailures;
        this.checksumLastFailure = checksumLastFailure;
        this.blkReadTime = blkReadTime;
        this.blkWriteTime = blkWriteTime;
        this.sessionTime = sessionTime;
        this.activeTime = activeTime;
        this.idleInTransactionTime = idleInTransactionTime;
        this.sessions = sessions;
        this.sessionsAbandoned = sessionsAbandoned;
        this.sessionsFatal = sessionsFatal;
        this.sessionsKilled = sessionsKilled;
        this.statsReset = statsReset;
    }

    @Nullable
    public Long getDatid() {
        return this.datid;
    }

    public void setDatid(@Nullable Long datid) {
        this.datid = datid;
    }

    @Nullable
    public String getDatname() {
        return this.datname;
    }

    public void setDatname(@Nullable String datname) {
        this.datname = datname;
    }

    @Nullable
    public Integer getNumbackends() {
        return this.numbackends;
    }

    public void setNumbackends(@Nullable Integer numbackends) {
        this.numbackends = numbackends;
    }

    @Nullable
    public Long getXactCommit() {
        return this.xactCommit;
    }

    public void setXactCommit(@Nullable Long xactCommit) {
        this.xactCommit = xactCommit;
    }

    @Nullable
    public Long getXactRollback() {
        return this.xactRollback;
    }

    public void setXactRollback(@Nullable Long xactRollback) {
        this.xactRollback = xactRollback;
    }

    @Nullable
    public Long getBlksRead() {
        return this.blksRead;
    }

    public void setBlksRead(@Nullable Long blksRead) {
        this.blksRead = blksRead;
    }

    @Nullable
    public Long getBlksHit() {
        return this.blksHit;
    }

    public void setBlksHit(@Nullable Long blksHit) {
        this.blksHit = blksHit;
    }

    @Nullable
    public Long getTupReturned() {
        return this.tupReturned;
    }

    public void setTupReturned(@Nullable Long tupReturned) {
        this.tupReturned = tupReturned;
    }

    @Nullable
    public Long getTupFetched() {
        return this.tupFetched;
    }

    public void setTupFetched(@Nullable Long tupFetched) {
        this.tupFetched = tupFetched;
    }

    @Nullable
    public Long getTupInserted() {
        return this.tupInserted;
    }

    public void setTupInserted(@Nullable Long tupInserted) {
        this.tupInserted = tupInserted;
    }

    @Nullable
    public Long getTupUpdated() {
        return this.tupUpdated;
    }

    public void setTupUpdated(@Nullable Long tupUpdated) {
        this.tupUpdated = tupUpdated;
    }

    @Nullable
    public Long getTupDeleted() {
        return this.tupDeleted;
    }

    public void setTupDeleted(@Nullable Long tupDeleted) {
        this.tupDeleted = tupDeleted;
    }

    @Nullable
    public Long getConflicts() {
        return this.conflicts;
    }

    public void setConflicts(@Nullable Long conflicts) {
        this.conflicts = conflicts;
    }

    @Nullable
    public Long getTempFiles() {
        return this.tempFiles;
    }

    public void setTempFiles(@Nullable Long tempFiles) {
        this.tempFiles = tempFiles;
    }

    @Nullable
    public Long getTempBytes() {
        return this.tempBytes;
    }

    public void setTempBytes(@Nullable Long tempBytes) {
        this.tempBytes = tempBytes;
    }

    @Nullable
    public Long getDeadlocks() {
        return this.deadlocks;
    }

    public void setDeadlocks(@Nullable Long deadlocks) {
        this.deadlocks = deadlocks;
    }

    @Nullable
    public Long getChecksumFailures() {
        return this.checksumFailures;
    }

    public void setChecksumFailures(@Nullable Long checksumFailures) {
        this.checksumFailures = checksumFailures;
    }

    @Nullable
    public OffsetDateTime getChecksumLastFailure() {
        return this.checksumLastFailure;
    }

    public void setChecksumLastFailure(@Nullable OffsetDateTime checksumLastFailure) {
        this.checksumLastFailure = checksumLastFailure;
    }

    @Nullable
    public Double getBlkReadTime() {
        return this.blkReadTime;
    }

    public void setBlkReadTime(@Nullable Double blkReadTime) {
        this.blkReadTime = blkReadTime;
    }

    @Nullable
    public Double getBlkWriteTime() {
        return this.blkWriteTime;
    }

    public void setBlkWriteTime(@Nullable Double blkWriteTime) {
        this.blkWriteTime = blkWriteTime;
    }

    @Nullable
    public Double getSessionTime() {
        return this.sessionTime;
    }

    public void setSessionTime(@Nullable Double sessionTime) {
        this.sessionTime = sessionTime;
    }

    @Nullable
    public Double getActiveTime() {
        return this.activeTime;
    }

    public void setActiveTime(@Nullable Double activeTime) {
        this.activeTime = activeTime;
    }

    @Nullable
    public Double getIdleInTransactionTime() {
        return this.idleInTransactionTime;
    }

    public void setIdleInTransactionTime(@Nullable Double idleInTransactionTime) {
        this.idleInTransactionTime = idleInTransactionTime;
    }

    @Nullable
    public Long getSessions() {
        return this.sessions;
    }

    public void setSessions(@Nullable Long sessions) {
        this.sessions = sessions;
    }

    @Nullable
    public Long getSessionsAbandoned() {
        return this.sessionsAbandoned;
    }

    public void setSessionsAbandoned(@Nullable Long sessionsAbandoned) {
        this.sessionsAbandoned = sessionsAbandoned;
    }

    @Nullable
    public Long getSessionsFatal() {
        return this.sessionsFatal;
    }

    public void setSessionsFatal(@Nullable Long sessionsFatal) {
        this.sessionsFatal = sessionsFatal;
    }

    @Nullable
    public Long getSessionsKilled() {
        return this.sessionsKilled;
    }

    public void setSessionsKilled(@Nullable Long sessionsKilled) {
        this.sessionsKilled = sessionsKilled;
    }

    @Nullable
    public OffsetDateTime getStatsReset() {
        return this.statsReset;
    }

    public void setStatsReset(@Nullable OffsetDateTime statsReset) {
        this.statsReset = statsReset;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PgStatDatabase other = (PgStatDatabase) obj;
        if (this.datid == null) {
            if (other.datid != null)
                return false;
        }
        else if (!this.datid.equals(other.datid))
            return false;
        if (this.datname == null) {
            if (other.datname != null)
                return false;
        }
        else if (!this.datname.equals(other.datname))
            return false;
        if (this.numbackends == null) {
            if (other.numbackends != null)
                return false;
        }
        else if (!this.numbackends.equals(other.numbackends))
            return false;
        if (this.xactCommit == null) {
            if (other.xactCommit != null)
                return false;
        }
        else if (!this.xactCommit.equals(other.xactCommit))
            return false;
        if (this.xactRollback == null) {
            if (other.xactRollback != null)
                return false;
        }
        else if (!this.xactRollback.equals(other.xactRollback))
            return false;
        if (this.blksRead == null) {
            if (other.blksRead != null)
                return false;
        }
        else if (!this.blksRead.equals(other.blksRead))
            return false;
        if (this.blksHit == null) {
            if (other.blksHit != null)
                return false;
        }
        else if (!this.blksHit.equals(other.blksHit))
            return false;
        if (this.tupReturned == null) {
            if (other.tupReturned != null)
                return false;
        }
        else if (!this.tupReturned.equals(other.tupReturned))
            return false;
        if (this.tupFetched == null) {
            if (other.tupFetched != null)
                return false;
        }
        else if (!this.tupFetched.equals(other.tupFetched))
            return false;
        if (this.tupInserted == null) {
            if (other.tupInserted != null)
                return false;
        }
        else if (!this.tupInserted.equals(other.tupInserted))
            return false;
        if (this.tupUpdated == null) {
            if (other.tupUpdated != null)
                return false;
        }
        else if (!this.tupUpdated.equals(other.tupUpdated))
            return false;
        if (this.tupDeleted == null) {
            if (other.tupDeleted != null)
                return false;
        }
        else if (!this.tupDeleted.equals(other.tupDeleted))
            return false;
        if (this.conflicts == null) {
            if (other.conflicts != null)
                return false;
        }
        else if (!this.conflicts.equals(other.conflicts))
            return false;
        if (this.tempFiles == null) {
            if (other.tempFiles != null)
                return false;
        }
        else if (!this.tempFiles.equals(other.tempFiles))
            return false;
        if (this.tempBytes == null) {
            if (other.tempBytes != null)
                return false;
        }
        else if (!this.tempBytes.equals(other.tempBytes))
            return false;
        if (this.deadlocks == null) {
            if (other.deadlocks != null)
                return false;
        }
        else if (!this.deadlocks.equals(other.deadlocks))
            return false;
        if (this.checksumFailures == null) {
            if (other.checksumFailures != null)
                return false;
        }
        else if (!this.checksumFailures.equals(other.checksumFailures))
            return false;
        if (this.checksumLastFailure == null) {
            if (other.checksumLastFailure != null)
                return false;
        }
        else if (!this.checksumLastFailure.equals(other.checksumLastFailure))
            return false;
        if (this.blkReadTime == null) {
            if (other.blkReadTime != null)
                return false;
        }
        else if (!this.blkReadTime.equals(other.blkReadTime))
            return false;
        if (this.blkWriteTime == null) {
            if (other.blkWriteTime != null)
                return false;
        }
        else if (!this.blkWriteTime.equals(other.blkWriteTime))
            return false;
        if (this.sessionTime == null) {
            if (other.sessionTime != null)
                return false;
        }
        else if (!this.sessionTime.equals(other.sessionTime))
            return false;
        if (this.activeTime == null) {
            if (other.activeTime != null)
                return false;
        }
        else if (!this.activeTime.equals(other.activeTime))
            return false;
        if (this.idleInTransactionTime == null) {
            if (other.idleInTransactionTime != null)
                return false;
        }
        else if (!this.idleInTransactionTime.equals(other.idleInTransactionTime))
            return false;
        if (this.sessions == null) {
            if (other.sessions != null)
                return false;
        }
        else if (!this.sessions.equals(other.sessions))
            return false;
        if (this.sessionsAbandoned == null) {
            if (other.sessionsAbandoned != null)
                return false;
        }
        else if (!this.sessionsAbandoned.equals(other.sessionsAbandoned))
            return false;
        if (this.sessionsFatal == null) {
            if (other.sessionsFatal != null)
                return false;
        }
        else if (!this.sessionsFatal.equals(other.sessionsFatal))
            return false;
        if (this.sessionsKilled == null) {
            if (other.sessionsKilled != null)
                return false;
        }
        else if (!this.sessionsKilled.equals(other.sessionsKilled))
            return false;
        if (this.statsReset == null) {
            if (other.statsReset != null)
                return false;
        }
        else if (!this.statsReset.equals(other.statsReset))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.datid == null) ? 0 : this.datid.hashCode());
        result = prime * result + ((this.datname == null) ? 0 : this.datname.hashCode());
        result = prime * result + ((this.numbackends == null) ? 0 : this.numbackends.hashCode());
        result = prime * result + ((this.xactCommit == null) ? 0 : this.xactCommit.hashCode());
        result = prime * result + ((this.xactRollback == null) ? 0 : this.xactRollback.hashCode());
        result = prime * result + ((this.blksRead == null) ? 0 : this.blksRead.hashCode());
        result = prime * result + ((this.blksHit == null) ? 0 : this.blksHit.hashCode());
        result = prime * result + ((this.tupReturned == null) ? 0 : this.tupReturned.hashCode());
        result = prime * result + ((this.tupFetched == null) ? 0 : this.tupFetched.hashCode());
        result = prime * result + ((this.tupInserted == null) ? 0 : this.tupInserted.hashCode());
        result = prime * result + ((this.tupUpdated == null) ? 0 : this.tupUpdated.hashCode());
        result = prime * result + ((this.tupDeleted == null) ? 0 : this.tupDeleted.hashCode());
        result = prime * result + ((this.conflicts == null) ? 0 : this.conflicts.hashCode());
        result = prime * result + ((this.tempFiles == null) ? 0 : this.tempFiles.hashCode());
        result = prime * result + ((this.tempBytes == null) ? 0 : this.tempBytes.hashCode());
        result = prime * result + ((this.deadlocks == null) ? 0 : this.deadlocks.hashCode());
        result = prime * result + ((this.checksumFailures == null) ? 0 : this.checksumFailures.hashCode());
        result = prime * result + ((this.checksumLastFailure == null) ? 0 : this.checksumLastFailure.hashCode());
        result = prime * result + ((this.blkReadTime == null) ? 0 : this.blkReadTime.hashCode());
        result = prime * result + ((this.blkWriteTime == null) ? 0 : this.blkWriteTime.hashCode());
        result = prime * result + ((this.sessionTime == null) ? 0 : this.sessionTime.hashCode());
        result = prime * result + ((this.activeTime == null) ? 0 : this.activeTime.hashCode());
        result = prime * result + ((this.idleInTransactionTime == null) ? 0 : this.idleInTransactionTime.hashCode());
        result = prime * result + ((this.sessions == null) ? 0 : this.sessions.hashCode());
        result = prime * result + ((this.sessionsAbandoned == null) ? 0 : this.sessionsAbandoned.hashCode());
        result = prime * result + ((this.sessionsFatal == null) ? 0 : this.sessionsFatal.hashCode());
        result = prime * result + ((this.sessionsKilled == null) ? 0 : this.sessionsKilled.hashCode());
        result = prime * result + ((this.statsReset == null) ? 0 : this.statsReset.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgStatDatabase (");

        sb.append(datid);
        sb.append(", ").append(datname);
        sb.append(", ").append(numbackends);
        sb.append(", ").append(xactCommit);
        sb.append(", ").append(xactRollback);
        sb.append(", ").append(blksRead);
        sb.append(", ").append(blksHit);
        sb.append(", ").append(tupReturned);
        sb.append(", ").append(tupFetched);
        sb.append(", ").append(tupInserted);
        sb.append(", ").append(tupUpdated);
        sb.append(", ").append(tupDeleted);
        sb.append(", ").append(conflicts);
        sb.append(", ").append(tempFiles);
        sb.append(", ").append(tempBytes);
        sb.append(", ").append(deadlocks);
        sb.append(", ").append(checksumFailures);
        sb.append(", ").append(checksumLastFailure);
        sb.append(", ").append(blkReadTime);
        sb.append(", ").append(blkWriteTime);
        sb.append(", ").append(sessionTime);
        sb.append(", ").append(activeTime);
        sb.append(", ").append(idleInTransactionTime);
        sb.append(", ").append(sessions);
        sb.append(", ").append(sessionsAbandoned);
        sb.append(", ").append(sessionsFatal);
        sb.append(", ").append(sessionsKilled);
        sb.append(", ").append(statsReset);

        sb.append(")");
        return sb.toString();
    }
}
