/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgIndex;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgIndexRecord extends TableRecordImpl<PgIndexRecord> {

    private static final long serialVersionUID = 1L;

    public void setIndexrelid(@NotNull Long value) {
        set(0, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getIndexrelid() {
        return (Long) get(0);
    }

    public void setIndrelid(@NotNull Long value) {
        set(1, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getIndrelid() {
        return (Long) get(1);
    }

    public void setIndnatts(@NotNull Short value) {
        set(2, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Short getIndnatts() {
        return (Short) get(2);
    }

    public void setIndnkeyatts(@NotNull Short value) {
        set(3, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Short getIndnkeyatts() {
        return (Short) get(3);
    }

    public void setIndisunique(@NotNull Boolean value) {
        set(4, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getIndisunique() {
        return (Boolean) get(4);
    }

    public void setIndnullsnotdistinct(@NotNull Boolean value) {
        set(5, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getIndnullsnotdistinct() {
        return (Boolean) get(5);
    }

    public void setIndisprimary(@NotNull Boolean value) {
        set(6, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getIndisprimary() {
        return (Boolean) get(6);
    }

    public void setIndisexclusion(@NotNull Boolean value) {
        set(7, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getIndisexclusion() {
        return (Boolean) get(7);
    }

    public void setIndimmediate(@NotNull Boolean value) {
        set(8, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getIndimmediate() {
        return (Boolean) get(8);
    }

    public void setIndisclustered(@NotNull Boolean value) {
        set(9, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getIndisclustered() {
        return (Boolean) get(9);
    }

    public void setIndisvalid(@NotNull Boolean value) {
        set(10, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getIndisvalid() {
        return (Boolean) get(10);
    }

    public void setIndcheckxmin(@NotNull Boolean value) {
        set(11, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getIndcheckxmin() {
        return (Boolean) get(11);
    }

    public void setIndisready(@NotNull Boolean value) {
        set(12, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getIndisready() {
        return (Boolean) get(12);
    }

    public void setIndislive(@NotNull Boolean value) {
        set(13, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getIndislive() {
        return (Boolean) get(13);
    }

    public void setIndisreplident(@NotNull Boolean value) {
        set(14, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getIndisreplident() {
        return (Boolean) get(14);
    }

    public void setIndkey(@NotNull Object[] value) {
        set(15, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Object[] getIndkey() {
        return (Object[]) get(15);
    }

    public void setIndcollation(@NotNull Object[] value) {
        set(16, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Object[] getIndcollation() {
        return (Object[]) get(16);
    }

    public void setIndclass(@NotNull Object[] value) {
        set(17, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Object[] getIndclass() {
        return (Object[]) get(17);
    }

    public void setIndoption(@NotNull Object[] value) {
        set(18, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Object[] getIndoption() {
        return (Object[]) get(18);
    }

    @Deprecated
    public void setIndexprs(@Nullable Object value) {
        set(19, value);
    }

    @Deprecated
    @Nullable
    public Object getIndexprs() {
        return get(19);
    }

    @Deprecated
    public void setIndpred(@Nullable Object value) {
        set(20, value);
    }

    @Deprecated
    @Nullable
    public Object getIndpred() {
        return get(20);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PgIndexRecord() {
        super(PgIndex.PG_INDEX);
    }

    @ConstructorProperties({ "indexrelid", "indrelid", "indnatts", "indnkeyatts", "indisunique", "indnullsnotdistinct", "indisprimary", "indisexclusion", "indimmediate", "indisclustered", "indisvalid", "indcheckxmin", "indisready", "indislive", "indisreplident", "indkey", "indcollation", "indclass", "indoption", "indexprs", "indpred" })
    public PgIndexRecord(@NotNull Long indexrelid, @NotNull Long indrelid, @NotNull Short indnatts, @NotNull Short indnkeyatts, @NotNull Boolean indisunique, @NotNull Boolean indnullsnotdistinct, @NotNull Boolean indisprimary, @NotNull Boolean indisexclusion, @NotNull Boolean indimmediate, @NotNull Boolean indisclustered, @NotNull Boolean indisvalid, @NotNull Boolean indcheckxmin, @NotNull Boolean indisready, @NotNull Boolean indislive, @NotNull Boolean indisreplident, @NotNull Object[] indkey, @NotNull Object[] indcollation, @NotNull Object[] indclass, @NotNull Object[] indoption, @Nullable Object indexprs, @Nullable Object indpred) {
        super(PgIndex.PG_INDEX);

        setIndexrelid(indexrelid);
        setIndrelid(indrelid);
        setIndnatts(indnatts);
        setIndnkeyatts(indnkeyatts);
        setIndisunique(indisunique);
        setIndnullsnotdistinct(indnullsnotdistinct);
        setIndisprimary(indisprimary);
        setIndisexclusion(indisexclusion);
        setIndimmediate(indimmediate);
        setIndisclustered(indisclustered);
        setIndisvalid(indisvalid);
        setIndcheckxmin(indcheckxmin);
        setIndisready(indisready);
        setIndislive(indislive);
        setIndisreplident(indisreplident);
        setIndkey(indkey);
        setIndcollation(indcollation);
        setIndclass(indclass);
        setIndoption(indoption);
        setIndexprs(indexprs);
        setIndpred(indpred);
        resetChangedOnNotNull();
    }

    public PgIndexRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgIndex value) {
        super(PgIndex.PG_INDEX);

        if (value != null) {
            setIndexrelid(value.getIndexrelid());
            setIndrelid(value.getIndrelid());
            setIndnatts(value.getIndnatts());
            setIndnkeyatts(value.getIndnkeyatts());
            setIndisunique(value.getIndisunique());
            setIndnullsnotdistinct(value.getIndnullsnotdistinct());
            setIndisprimary(value.getIndisprimary());
            setIndisexclusion(value.getIndisexclusion());
            setIndimmediate(value.getIndimmediate());
            setIndisclustered(value.getIndisclustered());
            setIndisvalid(value.getIndisvalid());
            setIndcheckxmin(value.getIndcheckxmin());
            setIndisready(value.getIndisready());
            setIndislive(value.getIndislive());
            setIndisreplident(value.getIndisreplident());
            setIndkey(value.getIndkey());
            setIndcollation(value.getIndcollation());
            setIndclass(value.getIndclass());
            setIndoption(value.getIndoption());
            setIndexprs(value.getIndexprs());
            setIndpred(value.getIndpred());
            resetChangedOnNotNull();
        }
    }
}
