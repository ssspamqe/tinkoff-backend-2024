/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgParameterAcl;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgParameterAclRecord extends TableRecordImpl<PgParameterAclRecord> {

    private static final long serialVersionUID = 1L;

    public void setOid(@NotNull Long value) {
        set(0, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getOid() {
        return (Long) get(0);
    }

    public void setParname(@NotNull String value) {
        set(1, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getParname() {
        return (String) get(1);
    }

    public void setParacl(@Nullable String[] value) {
        set(2, value);
    }

    @Nullable
    public String[] getParacl() {
        return (String[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PgParameterAclRecord() {
        super(PgParameterAcl.PG_PARAMETER_ACL);
    }

    @ConstructorProperties({ "oid", "parname", "paracl" })
    public PgParameterAclRecord(@NotNull Long oid, @NotNull String parname, @Nullable String[] paracl) {
        super(PgParameterAcl.PG_PARAMETER_ACL);

        setOid(oid);
        setParname(parname);
        setParacl(paracl);
        resetChangedOnNotNull();
    }

    public PgParameterAclRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgParameterAcl value) {
        super(PgParameterAcl.PG_PARAMETER_ACL);

        if (value != null) {
            setOid(value.getOid());
            setParname(value.getParname());
            setParacl(value.getParacl());
            resetChangedOnNotNull();
        }
    }
}
