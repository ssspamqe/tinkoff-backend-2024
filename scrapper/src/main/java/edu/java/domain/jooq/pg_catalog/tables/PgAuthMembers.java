/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables;


import edu.java.domain.jooq.pg_catalog.PgCatalog;
import edu.java.domain.jooq.pg_catalog.tables.records.PgAuthMembersRecord;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgAuthMembers extends TableImpl<PgAuthMembersRecord> {

    private static final long serialVersionUID = 1L;

    public static final PgAuthMembers PG_AUTH_MEMBERS = new PgAuthMembers();

    @Override
    @NotNull
    public Class<PgAuthMembersRecord> getRecordType() {
        return PgAuthMembersRecord.class;
    }

    public final TableField<PgAuthMembersRecord, Long> OID = createField(DSL.name("oid"), SQLDataType.BIGINT.nullable(false), this, "");

    public final TableField<PgAuthMembersRecord, Long> ROLEID = createField(DSL.name("roleid"), SQLDataType.BIGINT.nullable(false), this, "");

    public final TableField<PgAuthMembersRecord, Long> MEMBER = createField(DSL.name("member"), SQLDataType.BIGINT.nullable(false), this, "");

    public final TableField<PgAuthMembersRecord, Long> GRANTOR = createField(DSL.name("grantor"), SQLDataType.BIGINT.nullable(false), this, "");

    public final TableField<PgAuthMembersRecord, Boolean> ADMIN_OPTION = createField(DSL.name("admin_option"), SQLDataType.BOOLEAN.nullable(false), this, "");

    public final TableField<PgAuthMembersRecord, Boolean> INHERIT_OPTION = createField(DSL.name("inherit_option"), SQLDataType.BOOLEAN.nullable(false), this, "");

    public final TableField<PgAuthMembersRecord, Boolean> SET_OPTION = createField(DSL.name("set_option"), SQLDataType.BOOLEAN.nullable(false), this, "");

    private PgAuthMembers(Name alias, Table<PgAuthMembersRecord> aliased) {
        this(alias, aliased, null);
    }

    private PgAuthMembers(Name alias, Table<PgAuthMembersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public PgAuthMembers(String alias) {
        this(DSL.name(alias), PG_AUTH_MEMBERS);
    }

    public PgAuthMembers(Name alias) {
        this(alias, PG_AUTH_MEMBERS);
    }

    public PgAuthMembers() {
        this(DSL.name("pg_auth_members"), null);
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : PgCatalog.PG_CATALOG;
    }

    @Override
    @NotNull
    public PgAuthMembers as(String alias) {
        return new PgAuthMembers(DSL.name(alias), this);
    }

    @Override
    @NotNull
    public PgAuthMembers as(Name alias) {
        return new PgAuthMembers(alias, this);
    }

    @Override
    @NotNull
    public PgAuthMembers as(Table<?> alias) {
        return new PgAuthMembers(alias.getQualifiedName(), this);
    }

    @Override
    @NotNull
    public PgAuthMembers rename(String name) {
        return new PgAuthMembers(DSL.name(name), null);
    }

    @Override
    @NotNull
    public PgAuthMembers rename(Name name) {
        return new PgAuthMembers(name, null);
    }

    @Override
    @NotNull
    public PgAuthMembers rename(Table<?> name) {
        return new PgAuthMembers(name.getQualifiedName(), null);
    }
}
