/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables;


import edu.java.domain.jooq.pg_catalog.PgCatalog;
import edu.java.domain.jooq.pg_catalog.tables.records.PgSnapshotXipRecord;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgSnapshotXip extends TableImpl<PgSnapshotXipRecord> {

    private static final long serialVersionUID = 1L;

    public static final PgSnapshotXip PG_SNAPSHOT_XIP = new PgSnapshotXip();

    @Override
    @NotNull
    public Class<PgSnapshotXipRecord> getRecordType() {
        return PgSnapshotXipRecord.class;
    }

    @Deprecated
    public final TableField<PgSnapshotXipRecord, Object> PG_SNAPSHOT_XIP_ = createField(DSL.name("pg_snapshot_xip"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"xid8\""), this, "");

    private PgSnapshotXip(Name alias, Table<PgSnapshotXipRecord> aliased) {
        this(alias, aliased, new Field[] {
            DSL.val(null, org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"pg_snapshot\""))
        });
    }

    private PgSnapshotXip(Name alias, Table<PgSnapshotXipRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function());
    }

    public PgSnapshotXip(String alias) {
        this(DSL.name(alias), PG_SNAPSHOT_XIP);
    }

    public PgSnapshotXip(Name alias) {
        this(alias, PG_SNAPSHOT_XIP);
    }

    public PgSnapshotXip() {
        this(DSL.name("pg_snapshot_xip"), null);
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : PgCatalog.PG_CATALOG;
    }

    @Override
    @NotNull
    public PgSnapshotXip as(String alias) {
        return new PgSnapshotXip(DSL.name(alias), this, parameters);
    }

    @Override
    @NotNull
    public PgSnapshotXip as(Name alias) {
        return new PgSnapshotXip(alias, this, parameters);
    }

    @Override
    @NotNull
    public PgSnapshotXip as(Table<?> alias) {
        return new PgSnapshotXip(alias.getQualifiedName(), this, parameters);
    }

    @Override
    @NotNull
    public PgSnapshotXip rename(String name) {
        return new PgSnapshotXip(DSL.name(name), null, parameters);
    }

    @Override
    @NotNull
    public PgSnapshotXip rename(Name name) {
        return new PgSnapshotXip(name, null, parameters);
    }

    @Override
    @NotNull
    public PgSnapshotXip rename(Table<?> name) {
        return new PgSnapshotXip(name.getQualifiedName(), null, parameters);
    }

    public PgSnapshotXip call(
          Object __1
    ) {
        PgSnapshotXip result = new PgSnapshotXip(DSL.name("pg_snapshot_xip"), null, new Field[] {
            DSL.val(__1, org.jooq.impl.DefaultDataType.getDefaultDataType("\"pg_catalog\".\"pg_snapshot\""))
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }

    public PgSnapshotXip call(
          Field<Object> __1
    ) {
        PgSnapshotXip result = new PgSnapshotXip(DSL.name("pg_snapshot_xip"), null, new Field[] {
            __1
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }
}
