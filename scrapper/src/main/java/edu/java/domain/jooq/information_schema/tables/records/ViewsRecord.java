/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.records;


import edu.java.domain.jooq.information_schema.tables.Views;

import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ViewsRecord extends TableRecordImpl<ViewsRecord> {

    private static final long serialVersionUID = 1L;

    public void setTableCatalog(@Nullable String value) {
        set(0, value);
    }

    @Nullable
    public String getTableCatalog() {
        return (String) get(0);
    }

    public void setTableSchema(@Nullable String value) {
        set(1, value);
    }

    @Nullable
    public String getTableSchema() {
        return (String) get(1);
    }

    public void setTableName(@Nullable String value) {
        set(2, value);
    }

    @Nullable
    public String getTableName() {
        return (String) get(2);
    }

    public void setViewDefinition(@Nullable String value) {
        set(3, value);
    }

    @Nullable
    public String getViewDefinition() {
        return (String) get(3);
    }

    public void setCheckOption(@Nullable String value) {
        set(4, value);
    }

    @Nullable
    public String getCheckOption() {
        return (String) get(4);
    }

    public void setIsUpdatable(@Nullable String value) {
        set(5, value);
    }

    @Size(max = 3)
    @Nullable
    public String getIsUpdatable() {
        return (String) get(5);
    }

    public void setIsInsertableInto(@Nullable String value) {
        set(6, value);
    }

    @Size(max = 3)
    @Nullable
    public String getIsInsertableInto() {
        return (String) get(6);
    }

    public void setIsTriggerUpdatable(@Nullable String value) {
        set(7, value);
    }

    @Size(max = 3)
    @Nullable
    public String getIsTriggerUpdatable() {
        return (String) get(7);
    }

    public void setIsTriggerDeletable(@Nullable String value) {
        set(8, value);
    }

    @Size(max = 3)
    @Nullable
    public String getIsTriggerDeletable() {
        return (String) get(8);
    }

    public void setIsTriggerInsertableInto(@Nullable String value) {
        set(9, value);
    }

    @Size(max = 3)
    @Nullable
    public String getIsTriggerInsertableInto() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public ViewsRecord() {
        super(Views.VIEWS);
    }

    @ConstructorProperties({ "tableCatalog", "tableSchema", "tableName", "viewDefinition", "checkOption", "isUpdatable", "isInsertableInto", "isTriggerUpdatable", "isTriggerDeletable", "isTriggerInsertableInto" })
    public ViewsRecord(@Nullable String tableCatalog, @Nullable String tableSchema, @Nullable String tableName, @Nullable String viewDefinition, @Nullable String checkOption, @Nullable String isUpdatable, @Nullable String isInsertableInto, @Nullable String isTriggerUpdatable, @Nullable String isTriggerDeletable, @Nullable String isTriggerInsertableInto) {
        super(Views.VIEWS);

        setTableCatalog(tableCatalog);
        setTableSchema(tableSchema);
        setTableName(tableName);
        setViewDefinition(viewDefinition);
        setCheckOption(checkOption);
        setIsUpdatable(isUpdatable);
        setIsInsertableInto(isInsertableInto);
        setIsTriggerUpdatable(isTriggerUpdatable);
        setIsTriggerDeletable(isTriggerDeletable);
        setIsTriggerInsertableInto(isTriggerInsertableInto);
        resetChangedOnNotNull();
    }

    public ViewsRecord(edu.java.domain.jooq.information_schema.tables.pojos.Views value) {
        super(Views.VIEWS);

        if (value != null) {
            setTableCatalog(value.getTableCatalog());
            setTableSchema(value.getTableSchema());
            setTableName(value.getTableName());
            setViewDefinition(value.getViewDefinition());
            setCheckOption(value.getCheckOption());
            setIsUpdatable(value.getIsUpdatable());
            setIsInsertableInto(value.getIsInsertableInto());
            setIsTriggerUpdatable(value.getIsTriggerUpdatable());
            setIsTriggerDeletable(value.getIsTriggerDeletable());
            setIsTriggerInsertableInto(value.getIsTriggerInsertableInto());
            resetChangedOnNotNull();
        }
    }
}
