/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.pojos;


import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;
import java.io.Serializable;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Tables implements Serializable {

    private static final long serialVersionUID = 1L;

    private String tableCatalog;
    private String tableSchema;
    private String tableName;
    private String tableType;
    private String selfReferencingColumnName;
    private String referenceGeneration;
    private String userDefinedTypeCatalog;
    private String userDefinedTypeSchema;
    private String userDefinedTypeName;
    private String isInsertableInto;
    private String isTyped;
    private String commitAction;

    public Tables() {}

    public Tables(Tables value) {
        this.tableCatalog = value.tableCatalog;
        this.tableSchema = value.tableSchema;
        this.tableName = value.tableName;
        this.tableType = value.tableType;
        this.selfReferencingColumnName = value.selfReferencingColumnName;
        this.referenceGeneration = value.referenceGeneration;
        this.userDefinedTypeCatalog = value.userDefinedTypeCatalog;
        this.userDefinedTypeSchema = value.userDefinedTypeSchema;
        this.userDefinedTypeName = value.userDefinedTypeName;
        this.isInsertableInto = value.isInsertableInto;
        this.isTyped = value.isTyped;
        this.commitAction = value.commitAction;
    }

    @ConstructorProperties({ "tableCatalog", "tableSchema", "tableName", "tableType", "selfReferencingColumnName", "referenceGeneration", "userDefinedTypeCatalog", "userDefinedTypeSchema", "userDefinedTypeName", "isInsertableInto", "isTyped", "commitAction" })
    public Tables(
        @Nullable String tableCatalog,
        @Nullable String tableSchema,
        @Nullable String tableName,
        @Nullable String tableType,
        @Nullable String selfReferencingColumnName,
        @Nullable String referenceGeneration,
        @Nullable String userDefinedTypeCatalog,
        @Nullable String userDefinedTypeSchema,
        @Nullable String userDefinedTypeName,
        @Nullable String isInsertableInto,
        @Nullable String isTyped,
        @Nullable String commitAction
    ) {
        this.tableCatalog = tableCatalog;
        this.tableSchema = tableSchema;
        this.tableName = tableName;
        this.tableType = tableType;
        this.selfReferencingColumnName = selfReferencingColumnName;
        this.referenceGeneration = referenceGeneration;
        this.userDefinedTypeCatalog = userDefinedTypeCatalog;
        this.userDefinedTypeSchema = userDefinedTypeSchema;
        this.userDefinedTypeName = userDefinedTypeName;
        this.isInsertableInto = isInsertableInto;
        this.isTyped = isTyped;
        this.commitAction = commitAction;
    }

    @Nullable
    public String getTableCatalog() {
        return this.tableCatalog;
    }

    public void setTableCatalog(@Nullable String tableCatalog) {
        this.tableCatalog = tableCatalog;
    }

    @Nullable
    public String getTableSchema() {
        return this.tableSchema;
    }

    public void setTableSchema(@Nullable String tableSchema) {
        this.tableSchema = tableSchema;
    }

    @Nullable
    public String getTableName() {
        return this.tableName;
    }

    public void setTableName(@Nullable String tableName) {
        this.tableName = tableName;
    }

    @Nullable
    public String getTableType() {
        return this.tableType;
    }

    public void setTableType(@Nullable String tableType) {
        this.tableType = tableType;
    }

    @Nullable
    public String getSelfReferencingColumnName() {
        return this.selfReferencingColumnName;
    }

    public void setSelfReferencingColumnName(@Nullable String selfReferencingColumnName) {
        this.selfReferencingColumnName = selfReferencingColumnName;
    }

    @Nullable
    public String getReferenceGeneration() {
        return this.referenceGeneration;
    }

    public void setReferenceGeneration(@Nullable String referenceGeneration) {
        this.referenceGeneration = referenceGeneration;
    }

    @Nullable
    public String getUserDefinedTypeCatalog() {
        return this.userDefinedTypeCatalog;
    }

    public void setUserDefinedTypeCatalog(@Nullable String userDefinedTypeCatalog) {
        this.userDefinedTypeCatalog = userDefinedTypeCatalog;
    }

    @Nullable
    public String getUserDefinedTypeSchema() {
        return this.userDefinedTypeSchema;
    }

    public void setUserDefinedTypeSchema(@Nullable String userDefinedTypeSchema) {
        this.userDefinedTypeSchema = userDefinedTypeSchema;
    }

    @Nullable
    public String getUserDefinedTypeName() {
        return this.userDefinedTypeName;
    }

    public void setUserDefinedTypeName(@Nullable String userDefinedTypeName) {
        this.userDefinedTypeName = userDefinedTypeName;
    }

    @Size(max = 3)
    @Nullable
    public String getIsInsertableInto() {
        return this.isInsertableInto;
    }

    public void setIsInsertableInto(@Nullable String isInsertableInto) {
        this.isInsertableInto = isInsertableInto;
    }

    @Size(max = 3)
    @Nullable
    public String getIsTyped() {
        return this.isTyped;
    }

    public void setIsTyped(@Nullable String isTyped) {
        this.isTyped = isTyped;
    }

    @Nullable
    public String getCommitAction() {
        return this.commitAction;
    }

    public void setCommitAction(@Nullable String commitAction) {
        this.commitAction = commitAction;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Tables other = (Tables) obj;
        if (this.tableCatalog == null) {
            if (other.tableCatalog != null)
                return false;
        }
        else if (!this.tableCatalog.equals(other.tableCatalog))
            return false;
        if (this.tableSchema == null) {
            if (other.tableSchema != null)
                return false;
        }
        else if (!this.tableSchema.equals(other.tableSchema))
            return false;
        if (this.tableName == null) {
            if (other.tableName != null)
                return false;
        }
        else if (!this.tableName.equals(other.tableName))
            return false;
        if (this.tableType == null) {
            if (other.tableType != null)
                return false;
        }
        else if (!this.tableType.equals(other.tableType))
            return false;
        if (this.selfReferencingColumnName == null) {
            if (other.selfReferencingColumnName != null)
                return false;
        }
        else if (!this.selfReferencingColumnName.equals(other.selfReferencingColumnName))
            return false;
        if (this.referenceGeneration == null) {
            if (other.referenceGeneration != null)
                return false;
        }
        else if (!this.referenceGeneration.equals(other.referenceGeneration))
            return false;
        if (this.userDefinedTypeCatalog == null) {
            if (other.userDefinedTypeCatalog != null)
                return false;
        }
        else if (!this.userDefinedTypeCatalog.equals(other.userDefinedTypeCatalog))
            return false;
        if (this.userDefinedTypeSchema == null) {
            if (other.userDefinedTypeSchema != null)
                return false;
        }
        else if (!this.userDefinedTypeSchema.equals(other.userDefinedTypeSchema))
            return false;
        if (this.userDefinedTypeName == null) {
            if (other.userDefinedTypeName != null)
                return false;
        }
        else if (!this.userDefinedTypeName.equals(other.userDefinedTypeName))
            return false;
        if (this.isInsertableInto == null) {
            if (other.isInsertableInto != null)
                return false;
        }
        else if (!this.isInsertableInto.equals(other.isInsertableInto))
            return false;
        if (this.isTyped == null) {
            if (other.isTyped != null)
                return false;
        }
        else if (!this.isTyped.equals(other.isTyped))
            return false;
        if (this.commitAction == null) {
            if (other.commitAction != null)
                return false;
        }
        else if (!this.commitAction.equals(other.commitAction))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.tableCatalog == null) ? 0 : this.tableCatalog.hashCode());
        result = prime * result + ((this.tableSchema == null) ? 0 : this.tableSchema.hashCode());
        result = prime * result + ((this.tableName == null) ? 0 : this.tableName.hashCode());
        result = prime * result + ((this.tableType == null) ? 0 : this.tableType.hashCode());
        result = prime * result + ((this.selfReferencingColumnName == null) ? 0 : this.selfReferencingColumnName.hashCode());
        result = prime * result + ((this.referenceGeneration == null) ? 0 : this.referenceGeneration.hashCode());
        result = prime * result + ((this.userDefinedTypeCatalog == null) ? 0 : this.userDefinedTypeCatalog.hashCode());
        result = prime * result + ((this.userDefinedTypeSchema == null) ? 0 : this.userDefinedTypeSchema.hashCode());
        result = prime * result + ((this.userDefinedTypeName == null) ? 0 : this.userDefinedTypeName.hashCode());
        result = prime * result + ((this.isInsertableInto == null) ? 0 : this.isInsertableInto.hashCode());
        result = prime * result + ((this.isTyped == null) ? 0 : this.isTyped.hashCode());
        result = prime * result + ((this.commitAction == null) ? 0 : this.commitAction.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Tables (");

        sb.append(tableCatalog);
        sb.append(", ").append(tableSchema);
        sb.append(", ").append(tableName);
        sb.append(", ").append(tableType);
        sb.append(", ").append(selfReferencingColumnName);
        sb.append(", ").append(referenceGeneration);
        sb.append(", ").append(userDefinedTypeCatalog);
        sb.append(", ").append(userDefinedTypeSchema);
        sb.append(", ").append(userDefinedTypeName);
        sb.append(", ").append(isInsertableInto);
        sb.append(", ").append(isTyped);
        sb.append(", ").append(commitAction);

        sb.append(")");
        return sb.toString();
    }
}
