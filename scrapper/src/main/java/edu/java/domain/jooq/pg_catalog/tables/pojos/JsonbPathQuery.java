/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;
import org.jooq.JSONB;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JsonbPathQuery implements Serializable {

    private static final long serialVersionUID = 1L;

    private JSONB jsonbPathQuery;

    public JsonbPathQuery() {}

    public JsonbPathQuery(JsonbPathQuery value) {
        this.jsonbPathQuery = value.jsonbPathQuery;
    }

    @ConstructorProperties({ "jsonbPathQuery" })
    public JsonbPathQuery(
        @Nullable JSONB jsonbPathQuery
    ) {
        this.jsonbPathQuery = jsonbPathQuery;
    }

    @Nullable
    public JSONB getJsonbPathQuery() {
        return this.jsonbPathQuery;
    }

    public void setJsonbPathQuery(@Nullable JSONB jsonbPathQuery) {
        this.jsonbPathQuery = jsonbPathQuery;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JsonbPathQuery other = (JsonbPathQuery) obj;
        if (this.jsonbPathQuery == null) {
            if (other.jsonbPathQuery != null)
                return false;
        }
        else if (!this.jsonbPathQuery.equals(other.jsonbPathQuery))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.jsonbPathQuery == null) ? 0 : this.jsonbPathQuery.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JsonbPathQuery (");

        sb.append(jsonbPathQuery);

        sb.append(")");
        return sb.toString();
    }
}
