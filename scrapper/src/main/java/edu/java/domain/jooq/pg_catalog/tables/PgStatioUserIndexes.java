/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables;


import edu.java.domain.jooq.pg_catalog.PgCatalog;
import edu.java.domain.jooq.pg_catalog.tables.records.PgStatioUserIndexesRecord;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatioUserIndexes extends TableImpl<PgStatioUserIndexesRecord> {

    private static final long serialVersionUID = 1L;

    public static final PgStatioUserIndexes PG_STATIO_USER_INDEXES = new PgStatioUserIndexes();

    @Override
    @NotNull
    public Class<PgStatioUserIndexesRecord> getRecordType() {
        return PgStatioUserIndexesRecord.class;
    }

    public final TableField<PgStatioUserIndexesRecord, Long> RELID = createField(DSL.name("relid"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatioUserIndexesRecord, Long> INDEXRELID = createField(DSL.name("indexrelid"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatioUserIndexesRecord, String> SCHEMANAME = createField(DSL.name("schemaname"), SQLDataType.VARCHAR, this, "");

    public final TableField<PgStatioUserIndexesRecord, String> RELNAME = createField(DSL.name("relname"), SQLDataType.VARCHAR, this, "");

    public final TableField<PgStatioUserIndexesRecord, String> INDEXRELNAME = createField(DSL.name("indexrelname"), SQLDataType.VARCHAR, this, "");

    public final TableField<PgStatioUserIndexesRecord, Long> IDX_BLKS_READ = createField(DSL.name("idx_blks_read"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatioUserIndexesRecord, Long> IDX_BLKS_HIT = createField(DSL.name("idx_blks_hit"), SQLDataType.BIGINT, this, "");

    private PgStatioUserIndexes(Name alias, Table<PgStatioUserIndexesRecord> aliased) {
        this(alias, aliased, null);
    }

    private PgStatioUserIndexes(Name alias, Table<PgStatioUserIndexesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view());
    }

    public PgStatioUserIndexes(String alias) {
        this(DSL.name(alias), PG_STATIO_USER_INDEXES);
    }

    public PgStatioUserIndexes(Name alias) {
        this(alias, PG_STATIO_USER_INDEXES);
    }

    public PgStatioUserIndexes() {
        this(DSL.name("pg_statio_user_indexes"), null);
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : PgCatalog.PG_CATALOG;
    }

    @Override
    @NotNull
    public PgStatioUserIndexes as(String alias) {
        return new PgStatioUserIndexes(DSL.name(alias), this);
    }

    @Override
    @NotNull
    public PgStatioUserIndexes as(Name alias) {
        return new PgStatioUserIndexes(alias, this);
    }

    @Override
    @NotNull
    public PgStatioUserIndexes as(Table<?> alias) {
        return new PgStatioUserIndexes(alias.getQualifiedName(), this);
    }

    @Override
    @NotNull
    public PgStatioUserIndexes rename(String name) {
        return new PgStatioUserIndexes(DSL.name(name), null);
    }

    @Override
    @NotNull
    public PgStatioUserIndexes rename(Name name) {
        return new PgStatioUserIndexes(name, null);
    }

    @Override
    @NotNull
    public PgStatioUserIndexes rename(Table<?> name) {
        return new PgStatioUserIndexes(name.getQualifiedName(), null);
    }
}
