/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatGetRecoveryPrefetch implements Serializable {

    private static final long serialVersionUID = 1L;

    private OffsetDateTime statsReset;
    private Long prefetch;
    private Long hit;
    private Long skipInit;
    private Long skipNew;
    private Long skipFpw;
    private Long skipRep;
    private Integer walDistance;
    private Integer blockDistance;
    private Integer ioDepth;

    public PgStatGetRecoveryPrefetch() {}

    public PgStatGetRecoveryPrefetch(PgStatGetRecoveryPrefetch value) {
        this.statsReset = value.statsReset;
        this.prefetch = value.prefetch;
        this.hit = value.hit;
        this.skipInit = value.skipInit;
        this.skipNew = value.skipNew;
        this.skipFpw = value.skipFpw;
        this.skipRep = value.skipRep;
        this.walDistance = value.walDistance;
        this.blockDistance = value.blockDistance;
        this.ioDepth = value.ioDepth;
    }

    @ConstructorProperties({ "statsReset", "prefetch", "hit", "skipInit", "skipNew", "skipFpw", "skipRep", "walDistance", "blockDistance", "ioDepth" })
    public PgStatGetRecoveryPrefetch(
        @Nullable OffsetDateTime statsReset,
        @Nullable Long prefetch,
        @Nullable Long hit,
        @Nullable Long skipInit,
        @Nullable Long skipNew,
        @Nullable Long skipFpw,
        @Nullable Long skipRep,
        @Nullable Integer walDistance,
        @Nullable Integer blockDistance,
        @Nullable Integer ioDepth
    ) {
        this.statsReset = statsReset;
        this.prefetch = prefetch;
        this.hit = hit;
        this.skipInit = skipInit;
        this.skipNew = skipNew;
        this.skipFpw = skipFpw;
        this.skipRep = skipRep;
        this.walDistance = walDistance;
        this.blockDistance = blockDistance;
        this.ioDepth = ioDepth;
    }

    @Nullable
    public OffsetDateTime getStatsReset() {
        return this.statsReset;
    }

    public void setStatsReset(@Nullable OffsetDateTime statsReset) {
        this.statsReset = statsReset;
    }

    @Nullable
    public Long getPrefetch() {
        return this.prefetch;
    }

    public void setPrefetch(@Nullable Long prefetch) {
        this.prefetch = prefetch;
    }

    @Nullable
    public Long getHit() {
        return this.hit;
    }

    public void setHit(@Nullable Long hit) {
        this.hit = hit;
    }

    @Nullable
    public Long getSkipInit() {
        return this.skipInit;
    }

    public void setSkipInit(@Nullable Long skipInit) {
        this.skipInit = skipInit;
    }

    @Nullable
    public Long getSkipNew() {
        return this.skipNew;
    }

    public void setSkipNew(@Nullable Long skipNew) {
        this.skipNew = skipNew;
    }

    @Nullable
    public Long getSkipFpw() {
        return this.skipFpw;
    }

    public void setSkipFpw(@Nullable Long skipFpw) {
        this.skipFpw = skipFpw;
    }

    @Nullable
    public Long getSkipRep() {
        return this.skipRep;
    }

    public void setSkipRep(@Nullable Long skipRep) {
        this.skipRep = skipRep;
    }

    @Nullable
    public Integer getWalDistance() {
        return this.walDistance;
    }

    public void setWalDistance(@Nullable Integer walDistance) {
        this.walDistance = walDistance;
    }

    @Nullable
    public Integer getBlockDistance() {
        return this.blockDistance;
    }

    public void setBlockDistance(@Nullable Integer blockDistance) {
        this.blockDistance = blockDistance;
    }

    @Nullable
    public Integer getIoDepth() {
        return this.ioDepth;
    }

    public void setIoDepth(@Nullable Integer ioDepth) {
        this.ioDepth = ioDepth;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PgStatGetRecoveryPrefetch other = (PgStatGetRecoveryPrefetch) obj;
        if (this.statsReset == null) {
            if (other.statsReset != null)
                return false;
        }
        else if (!this.statsReset.equals(other.statsReset))
            return false;
        if (this.prefetch == null) {
            if (other.prefetch != null)
                return false;
        }
        else if (!this.prefetch.equals(other.prefetch))
            return false;
        if (this.hit == null) {
            if (other.hit != null)
                return false;
        }
        else if (!this.hit.equals(other.hit))
            return false;
        if (this.skipInit == null) {
            if (other.skipInit != null)
                return false;
        }
        else if (!this.skipInit.equals(other.skipInit))
            return false;
        if (this.skipNew == null) {
            if (other.skipNew != null)
                return false;
        }
        else if (!this.skipNew.equals(other.skipNew))
            return false;
        if (this.skipFpw == null) {
            if (other.skipFpw != null)
                return false;
        }
        else if (!this.skipFpw.equals(other.skipFpw))
            return false;
        if (this.skipRep == null) {
            if (other.skipRep != null)
                return false;
        }
        else if (!this.skipRep.equals(other.skipRep))
            return false;
        if (this.walDistance == null) {
            if (other.walDistance != null)
                return false;
        }
        else if (!this.walDistance.equals(other.walDistance))
            return false;
        if (this.blockDistance == null) {
            if (other.blockDistance != null)
                return false;
        }
        else if (!this.blockDistance.equals(other.blockDistance))
            return false;
        if (this.ioDepth == null) {
            if (other.ioDepth != null)
                return false;
        }
        else if (!this.ioDepth.equals(other.ioDepth))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.statsReset == null) ? 0 : this.statsReset.hashCode());
        result = prime * result + ((this.prefetch == null) ? 0 : this.prefetch.hashCode());
        result = prime * result + ((this.hit == null) ? 0 : this.hit.hashCode());
        result = prime * result + ((this.skipInit == null) ? 0 : this.skipInit.hashCode());
        result = prime * result + ((this.skipNew == null) ? 0 : this.skipNew.hashCode());
        result = prime * result + ((this.skipFpw == null) ? 0 : this.skipFpw.hashCode());
        result = prime * result + ((this.skipRep == null) ? 0 : this.skipRep.hashCode());
        result = prime * result + ((this.walDistance == null) ? 0 : this.walDistance.hashCode());
        result = prime * result + ((this.blockDistance == null) ? 0 : this.blockDistance.hashCode());
        result = prime * result + ((this.ioDepth == null) ? 0 : this.ioDepth.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgStatGetRecoveryPrefetch (");

        sb.append(statsReset);
        sb.append(", ").append(prefetch);
        sb.append(", ").append(hit);
        sb.append(", ").append(skipInit);
        sb.append(", ").append(skipNew);
        sb.append(", ").append(skipFpw);
        sb.append(", ").append(skipRep);
        sb.append(", ").append(walDistance);
        sb.append(", ").append(blockDistance);
        sb.append(", ").append(ioDepth);

        sb.append(")");
        return sb.toString();
    }
}
