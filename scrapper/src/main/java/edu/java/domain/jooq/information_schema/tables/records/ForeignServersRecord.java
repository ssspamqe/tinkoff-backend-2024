/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.records;


import edu.java.domain.jooq.information_schema.tables.ForeignServers;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ForeignServersRecord extends TableRecordImpl<ForeignServersRecord> {

    private static final long serialVersionUID = 1L;

    public void setForeignServerCatalog(@Nullable String value) {
        set(0, value);
    }

    @Nullable
    public String getForeignServerCatalog() {
        return (String) get(0);
    }

    public void setForeignServerName(@Nullable String value) {
        set(1, value);
    }

    @Nullable
    public String getForeignServerName() {
        return (String) get(1);
    }

    public void setForeignDataWrapperCatalog(@Nullable String value) {
        set(2, value);
    }

    @Nullable
    public String getForeignDataWrapperCatalog() {
        return (String) get(2);
    }

    public void setForeignDataWrapperName(@Nullable String value) {
        set(3, value);
    }

    @Nullable
    public String getForeignDataWrapperName() {
        return (String) get(3);
    }

    public void setForeignServerType(@Nullable String value) {
        set(4, value);
    }

    @Nullable
    public String getForeignServerType() {
        return (String) get(4);
    }

    public void setForeignServerVersion(@Nullable String value) {
        set(5, value);
    }

    @Nullable
    public String getForeignServerVersion() {
        return (String) get(5);
    }

    public void setAuthorizationIdentifier(@Nullable String value) {
        set(6, value);
    }

    @Nullable
    public String getAuthorizationIdentifier() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public ForeignServersRecord() {
        super(ForeignServers.FOREIGN_SERVERS);
    }

    @ConstructorProperties({ "foreignServerCatalog", "foreignServerName", "foreignDataWrapperCatalog", "foreignDataWrapperName", "foreignServerType", "foreignServerVersion", "authorizationIdentifier" })
    public ForeignServersRecord(@Nullable String foreignServerCatalog, @Nullable String foreignServerName, @Nullable String foreignDataWrapperCatalog, @Nullable String foreignDataWrapperName, @Nullable String foreignServerType, @Nullable String foreignServerVersion, @Nullable String authorizationIdentifier) {
        super(ForeignServers.FOREIGN_SERVERS);

        setForeignServerCatalog(foreignServerCatalog);
        setForeignServerName(foreignServerName);
        setForeignDataWrapperCatalog(foreignDataWrapperCatalog);
        setForeignDataWrapperName(foreignDataWrapperName);
        setForeignServerType(foreignServerType);
        setForeignServerVersion(foreignServerVersion);
        setAuthorizationIdentifier(authorizationIdentifier);
        resetChangedOnNotNull();
    }

    public ForeignServersRecord(edu.java.domain.jooq.information_schema.tables.pojos.ForeignServers value) {
        super(ForeignServers.FOREIGN_SERVERS);

        if (value != null) {
            setForeignServerCatalog(value.getForeignServerCatalog());
            setForeignServerName(value.getForeignServerName());
            setForeignDataWrapperCatalog(value.getForeignDataWrapperCatalog());
            setForeignDataWrapperName(value.getForeignDataWrapperName());
            setForeignServerType(value.getForeignServerType());
            setForeignServerVersion(value.getForeignServerVersion());
            setAuthorizationIdentifier(value.getAuthorizationIdentifier());
            resetChangedOnNotNull();
        }
    }
}
