/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables;


import edu.java.domain.jooq.pg_catalog.PgCatalog;
import edu.java.domain.jooq.pg_catalog.tables.records.PgStatSubscriptionStatsRecord;

import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatSubscriptionStats extends TableImpl<PgStatSubscriptionStatsRecord> {

    private static final long serialVersionUID = 1L;

    public static final PgStatSubscriptionStats PG_STAT_SUBSCRIPTION_STATS = new PgStatSubscriptionStats();

    @Override
    @NotNull
    public Class<PgStatSubscriptionStatsRecord> getRecordType() {
        return PgStatSubscriptionStatsRecord.class;
    }

    public final TableField<PgStatSubscriptionStatsRecord, Long> SUBID = createField(DSL.name("subid"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatSubscriptionStatsRecord, String> SUBNAME = createField(DSL.name("subname"), SQLDataType.VARCHAR, this, "");

    public final TableField<PgStatSubscriptionStatsRecord, Long> APPLY_ERROR_COUNT = createField(DSL.name("apply_error_count"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatSubscriptionStatsRecord, Long> SYNC_ERROR_COUNT = createField(DSL.name("sync_error_count"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatSubscriptionStatsRecord, OffsetDateTime> STATS_RESET = createField(DSL.name("stats_reset"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    private PgStatSubscriptionStats(Name alias, Table<PgStatSubscriptionStatsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PgStatSubscriptionStats(Name alias, Table<PgStatSubscriptionStatsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view());
    }

    public PgStatSubscriptionStats(String alias) {
        this(DSL.name(alias), PG_STAT_SUBSCRIPTION_STATS);
    }

    public PgStatSubscriptionStats(Name alias) {
        this(alias, PG_STAT_SUBSCRIPTION_STATS);
    }

    public PgStatSubscriptionStats() {
        this(DSL.name("pg_stat_subscription_stats"), null);
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : PgCatalog.PG_CATALOG;
    }

    @Override
    @NotNull
    public PgStatSubscriptionStats as(String alias) {
        return new PgStatSubscriptionStats(DSL.name(alias), this);
    }

    @Override
    @NotNull
    public PgStatSubscriptionStats as(Name alias) {
        return new PgStatSubscriptionStats(alias, this);
    }

    @Override
    @NotNull
    public PgStatSubscriptionStats as(Table<?> alias) {
        return new PgStatSubscriptionStats(alias.getQualifiedName(), this);
    }

    @Override
    @NotNull
    public PgStatSubscriptionStats rename(String name) {
        return new PgStatSubscriptionStats(DSL.name(name), null);
    }

    @Override
    @NotNull
    public PgStatSubscriptionStats rename(Name name) {
        return new PgStatSubscriptionStats(name, null);
    }

    @Override
    @NotNull
    public PgStatSubscriptionStats rename(Table<?> name) {
        return new PgStatSubscriptionStats(name.getQualifiedName(), null);
    }
}
