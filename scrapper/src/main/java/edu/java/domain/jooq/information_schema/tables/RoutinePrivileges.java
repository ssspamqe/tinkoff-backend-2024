/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables;


import edu.java.domain.jooq.information_schema.InformationSchema;
import edu.java.domain.jooq.information_schema.tables.records.RoutinePrivilegesRecord;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RoutinePrivileges extends TableImpl<RoutinePrivilegesRecord> {

    private static final long serialVersionUID = 1L;

    public static final RoutinePrivileges ROUTINE_PRIVILEGES = new RoutinePrivileges();

    @Override
    @NotNull
    public Class<RoutinePrivilegesRecord> getRecordType() {
        return RoutinePrivilegesRecord.class;
    }

    public final TableField<RoutinePrivilegesRecord, String> GRANTOR = createField(DSL.name("grantor"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<RoutinePrivilegesRecord, String> GRANTEE = createField(DSL.name("grantee"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<RoutinePrivilegesRecord, String> SPECIFIC_CATALOG = createField(DSL.name("specific_catalog"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<RoutinePrivilegesRecord, String> SPECIFIC_SCHEMA = createField(DSL.name("specific_schema"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<RoutinePrivilegesRecord, String> SPECIFIC_NAME = createField(DSL.name("specific_name"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<RoutinePrivilegesRecord, String> ROUTINE_CATALOG = createField(DSL.name("routine_catalog"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<RoutinePrivilegesRecord, String> ROUTINE_SCHEMA = createField(DSL.name("routine_schema"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<RoutinePrivilegesRecord, String> ROUTINE_NAME = createField(DSL.name("routine_name"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<RoutinePrivilegesRecord, String> PRIVILEGE_TYPE = createField(DSL.name("privilege_type"), edu.java.domain.jooq.information_schema.Domains.CHARACTER_DATA.getDataType(), this, "");

    public final TableField<RoutinePrivilegesRecord, String> IS_GRANTABLE = createField(DSL.name("is_grantable"), edu.java.domain.jooq.information_schema.Domains.YES_OR_NO.getDataType(), this, "");

    private RoutinePrivileges(Name alias, Table<RoutinePrivilegesRecord> aliased) {
        this(alias, aliased, null);
    }

    private RoutinePrivileges(Name alias, Table<RoutinePrivilegesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view());
    }

    public RoutinePrivileges(String alias) {
        this(DSL.name(alias), ROUTINE_PRIVILEGES);
    }

    public RoutinePrivileges(Name alias) {
        this(alias, ROUTINE_PRIVILEGES);
    }

    public RoutinePrivileges() {
        this(DSL.name("routine_privileges"), null);
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : InformationSchema.INFORMATION_SCHEMA;
    }

    @Override
    @NotNull
    public RoutinePrivileges as(String alias) {
        return new RoutinePrivileges(DSL.name(alias), this);
    }

    @Override
    @NotNull
    public RoutinePrivileges as(Name alias) {
        return new RoutinePrivileges(alias, this);
    }

    @Override
    @NotNull
    public RoutinePrivileges as(Table<?> alias) {
        return new RoutinePrivileges(alias.getQualifiedName(), this);
    }

    @Override
    @NotNull
    public RoutinePrivileges rename(String name) {
        return new RoutinePrivileges(DSL.name(name), null);
    }

    @Override
    @NotNull
    public RoutinePrivileges rename(Name name) {
        return new RoutinePrivileges(name, null);
    }

    @Override
    @NotNull
    public RoutinePrivileges rename(Table<?> name) {
        return new RoutinePrivileges(name.getQualifiedName(), null);
    }
}
