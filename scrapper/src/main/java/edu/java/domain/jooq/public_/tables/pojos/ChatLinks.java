/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.public_.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ChatLinks implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Long chatId;
    private Long linkId;
    private LocalDateTime createdAt;

    public ChatLinks() {}

    public ChatLinks(ChatLinks value) {
        this.id = value.id;
        this.chatId = value.chatId;
        this.linkId = value.linkId;
        this.createdAt = value.createdAt;
    }

    @ConstructorProperties({ "id", "chatId", "linkId", "createdAt" })
    public ChatLinks(
        @Nullable Long id,
        @NotNull Long chatId,
        @NotNull Long linkId,
        @NotNull LocalDateTime createdAt
    ) {
        this.id = id;
        this.chatId = chatId;
        this.linkId = linkId;
        this.createdAt = createdAt;
    }

    @Nullable
    public Long getId() {
        return this.id;
    }

    public void setId(@Nullable Long id) {
        this.id = id;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getChatId() {
        return this.chatId;
    }

    public void setChatId(@NotNull Long chatId) {
        this.chatId = chatId;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getLinkId() {
        return this.linkId;
    }

    public void setLinkId(@NotNull Long linkId) {
        this.linkId = linkId;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(@NotNull LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ChatLinks other = (ChatLinks) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.chatId == null) {
            if (other.chatId != null)
                return false;
        }
        else if (!this.chatId.equals(other.chatId))
            return false;
        if (this.linkId == null) {
            if (other.linkId != null)
                return false;
        }
        else if (!this.linkId.equals(other.linkId))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.chatId == null) ? 0 : this.chatId.hashCode());
        result = prime * result + ((this.linkId == null) ? 0 : this.linkId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ChatLinks (");

        sb.append(id);
        sb.append(", ").append(chatId);
        sb.append(", ").append(linkId);
        sb.append(", ").append(createdAt);

        sb.append(")");
        return sb.toString();
    }
}
