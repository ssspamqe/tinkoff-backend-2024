/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ViewColumnUsage implements Serializable {

    private static final long serialVersionUID = 1L;

    private String viewCatalog;
    private String viewSchema;
    private String viewName;
    private String tableCatalog;
    private String tableSchema;
    private String tableName;
    private String columnName;

    public ViewColumnUsage() {}

    public ViewColumnUsage(ViewColumnUsage value) {
        this.viewCatalog = value.viewCatalog;
        this.viewSchema = value.viewSchema;
        this.viewName = value.viewName;
        this.tableCatalog = value.tableCatalog;
        this.tableSchema = value.tableSchema;
        this.tableName = value.tableName;
        this.columnName = value.columnName;
    }

    @ConstructorProperties({ "viewCatalog", "viewSchema", "viewName", "tableCatalog", "tableSchema", "tableName", "columnName" })
    public ViewColumnUsage(
        @Nullable String viewCatalog,
        @Nullable String viewSchema,
        @Nullable String viewName,
        @Nullable String tableCatalog,
        @Nullable String tableSchema,
        @Nullable String tableName,
        @Nullable String columnName
    ) {
        this.viewCatalog = viewCatalog;
        this.viewSchema = viewSchema;
        this.viewName = viewName;
        this.tableCatalog = tableCatalog;
        this.tableSchema = tableSchema;
        this.tableName = tableName;
        this.columnName = columnName;
    }

    @Nullable
    public String getViewCatalog() {
        return this.viewCatalog;
    }

    public void setViewCatalog(@Nullable String viewCatalog) {
        this.viewCatalog = viewCatalog;
    }

    @Nullable
    public String getViewSchema() {
        return this.viewSchema;
    }

    public void setViewSchema(@Nullable String viewSchema) {
        this.viewSchema = viewSchema;
    }

    @Nullable
    public String getViewName() {
        return this.viewName;
    }

    public void setViewName(@Nullable String viewName) {
        this.viewName = viewName;
    }

    @Nullable
    public String getTableCatalog() {
        return this.tableCatalog;
    }

    public void setTableCatalog(@Nullable String tableCatalog) {
        this.tableCatalog = tableCatalog;
    }

    @Nullable
    public String getTableSchema() {
        return this.tableSchema;
    }

    public void setTableSchema(@Nullable String tableSchema) {
        this.tableSchema = tableSchema;
    }

    @Nullable
    public String getTableName() {
        return this.tableName;
    }

    public void setTableName(@Nullable String tableName) {
        this.tableName = tableName;
    }

    @Nullable
    public String getColumnName() {
        return this.columnName;
    }

    public void setColumnName(@Nullable String columnName) {
        this.columnName = columnName;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ViewColumnUsage other = (ViewColumnUsage) obj;
        if (this.viewCatalog == null) {
            if (other.viewCatalog != null)
                return false;
        }
        else if (!this.viewCatalog.equals(other.viewCatalog))
            return false;
        if (this.viewSchema == null) {
            if (other.viewSchema != null)
                return false;
        }
        else if (!this.viewSchema.equals(other.viewSchema))
            return false;
        if (this.viewName == null) {
            if (other.viewName != null)
                return false;
        }
        else if (!this.viewName.equals(other.viewName))
            return false;
        if (this.tableCatalog == null) {
            if (other.tableCatalog != null)
                return false;
        }
        else if (!this.tableCatalog.equals(other.tableCatalog))
            return false;
        if (this.tableSchema == null) {
            if (other.tableSchema != null)
                return false;
        }
        else if (!this.tableSchema.equals(other.tableSchema))
            return false;
        if (this.tableName == null) {
            if (other.tableName != null)
                return false;
        }
        else if (!this.tableName.equals(other.tableName))
            return false;
        if (this.columnName == null) {
            if (other.columnName != null)
                return false;
        }
        else if (!this.columnName.equals(other.columnName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.viewCatalog == null) ? 0 : this.viewCatalog.hashCode());
        result = prime * result + ((this.viewSchema == null) ? 0 : this.viewSchema.hashCode());
        result = prime * result + ((this.viewName == null) ? 0 : this.viewName.hashCode());
        result = prime * result + ((this.tableCatalog == null) ? 0 : this.tableCatalog.hashCode());
        result = prime * result + ((this.tableSchema == null) ? 0 : this.tableSchema.hashCode());
        result = prime * result + ((this.tableName == null) ? 0 : this.tableName.hashCode());
        result = prime * result + ((this.columnName == null) ? 0 : this.columnName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViewColumnUsage (");

        sb.append(viewCatalog);
        sb.append(", ").append(viewSchema);
        sb.append(", ").append(viewName);
        sb.append(", ").append(tableCatalog);
        sb.append(", ").append(tableSchema);
        sb.append(", ").append(tableName);
        sb.append(", ").append(columnName);

        sb.append(")");
        return sb.toString();
    }
}
