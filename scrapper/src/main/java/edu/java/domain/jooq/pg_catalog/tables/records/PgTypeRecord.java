/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgType;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgTypeRecord extends TableRecordImpl<PgTypeRecord> {

    private static final long serialVersionUID = 1L;

    public void setOid(@NotNull Long value) {
        set(0, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getOid() {
        return (Long) get(0);
    }

    public void setTypname(@NotNull String value) {
        set(1, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTypname() {
        return (String) get(1);
    }

    public void setTypnamespace(@NotNull Long value) {
        set(2, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTypnamespace() {
        return (Long) get(2);
    }

    public void setTypowner(@NotNull Long value) {
        set(3, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTypowner() {
        return (Long) get(3);
    }

    public void setTyplen(@NotNull Short value) {
        set(4, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Short getTyplen() {
        return (Short) get(4);
    }

    public void setTypbyval(@NotNull Boolean value) {
        set(5, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getTypbyval() {
        return (Boolean) get(5);
    }

    public void setTyptype(@NotNull String value) {
        set(6, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTyptype() {
        return (String) get(6);
    }

    public void setTypcategory(@NotNull String value) {
        set(7, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTypcategory() {
        return (String) get(7);
    }

    public void setTypispreferred(@NotNull Boolean value) {
        set(8, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getTypispreferred() {
        return (Boolean) get(8);
    }

    public void setTypisdefined(@NotNull Boolean value) {
        set(9, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getTypisdefined() {
        return (Boolean) get(9);
    }

    public void setTypdelim(@NotNull String value) {
        set(10, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTypdelim() {
        return (String) get(10);
    }

    public void setTyprelid(@NotNull Long value) {
        set(11, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTyprelid() {
        return (Long) get(11);
    }

    public void setTypsubscript(@NotNull String value) {
        set(12, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTypsubscript() {
        return (String) get(12);
    }

    public void setTypelem(@NotNull Long value) {
        set(13, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTypelem() {
        return (Long) get(13);
    }

    public void setTyparray(@NotNull Long value) {
        set(14, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTyparray() {
        return (Long) get(14);
    }

    public void setTypinput(@NotNull String value) {
        set(15, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTypinput() {
        return (String) get(15);
    }

    public void setTypoutput(@NotNull String value) {
        set(16, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTypoutput() {
        return (String) get(16);
    }

    public void setTypreceive(@NotNull String value) {
        set(17, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTypreceive() {
        return (String) get(17);
    }

    public void setTypsend(@NotNull String value) {
        set(18, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTypsend() {
        return (String) get(18);
    }

    public void setTypmodin(@NotNull String value) {
        set(19, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTypmodin() {
        return (String) get(19);
    }

    public void setTypmodout(@NotNull String value) {
        set(20, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTypmodout() {
        return (String) get(20);
    }

    public void setTypanalyze(@NotNull String value) {
        set(21, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTypanalyze() {
        return (String) get(21);
    }

    public void setTypalign(@NotNull String value) {
        set(22, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTypalign() {
        return (String) get(22);
    }

    public void setTypstorage(@NotNull String value) {
        set(23, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getTypstorage() {
        return (String) get(23);
    }

    public void setTypnotnull(@NotNull Boolean value) {
        set(24, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getTypnotnull() {
        return (Boolean) get(24);
    }

    public void setTypbasetype(@NotNull Long value) {
        set(25, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTypbasetype() {
        return (Long) get(25);
    }

    public void setTyptypmod(@NotNull Integer value) {
        set(26, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getTyptypmod() {
        return (Integer) get(26);
    }

    public void setTypndims(@NotNull Integer value) {
        set(27, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Integer getTypndims() {
        return (Integer) get(27);
    }

    public void setTypcollation(@NotNull Long value) {
        set(28, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTypcollation() {
        return (Long) get(28);
    }

    @Deprecated
    public void setTypdefaultbin(@Nullable Object value) {
        set(29, value);
    }

    @Deprecated
    @Nullable
    public Object getTypdefaultbin() {
        return get(29);
    }

    public void setTypdefault(@Nullable String value) {
        set(30, value);
    }

    @Nullable
    public String getTypdefault() {
        return (String) get(30);
    }

    public void setTypacl(@Nullable String[] value) {
        set(31, value);
    }

    @Nullable
    public String[] getTypacl() {
        return (String[]) get(31);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PgTypeRecord() {
        super(PgType.PG_TYPE);
    }

    @ConstructorProperties({ "oid", "typname", "typnamespace", "typowner", "typlen", "typbyval", "typtype", "typcategory", "typispreferred", "typisdefined", "typdelim", "typrelid", "typsubscript", "typelem", "typarray", "typinput", "typoutput", "typreceive", "typsend", "typmodin", "typmodout", "typanalyze", "typalign", "typstorage", "typnotnull", "typbasetype", "typtypmod", "typndims", "typcollation", "typdefaultbin", "typdefault", "typacl" })
    public PgTypeRecord(@NotNull Long oid, @NotNull String typname, @NotNull Long typnamespace, @NotNull Long typowner, @NotNull Short typlen, @NotNull Boolean typbyval, @NotNull String typtype, @NotNull String typcategory, @NotNull Boolean typispreferred, @NotNull Boolean typisdefined, @NotNull String typdelim, @NotNull Long typrelid, @NotNull String typsubscript, @NotNull Long typelem, @NotNull Long typarray, @NotNull String typinput, @NotNull String typoutput, @NotNull String typreceive, @NotNull String typsend, @NotNull String typmodin, @NotNull String typmodout, @NotNull String typanalyze, @NotNull String typalign, @NotNull String typstorage, @NotNull Boolean typnotnull, @NotNull Long typbasetype, @NotNull Integer typtypmod, @NotNull Integer typndims, @NotNull Long typcollation, @Nullable Object typdefaultbin, @Nullable String typdefault, @Nullable String[] typacl) {
        super(PgType.PG_TYPE);

        setOid(oid);
        setTypname(typname);
        setTypnamespace(typnamespace);
        setTypowner(typowner);
        setTyplen(typlen);
        setTypbyval(typbyval);
        setTyptype(typtype);
        setTypcategory(typcategory);
        setTypispreferred(typispreferred);
        setTypisdefined(typisdefined);
        setTypdelim(typdelim);
        setTyprelid(typrelid);
        setTypsubscript(typsubscript);
        setTypelem(typelem);
        setTyparray(typarray);
        setTypinput(typinput);
        setTypoutput(typoutput);
        setTypreceive(typreceive);
        setTypsend(typsend);
        setTypmodin(typmodin);
        setTypmodout(typmodout);
        setTypanalyze(typanalyze);
        setTypalign(typalign);
        setTypstorage(typstorage);
        setTypnotnull(typnotnull);
        setTypbasetype(typbasetype);
        setTyptypmod(typtypmod);
        setTypndims(typndims);
        setTypcollation(typcollation);
        setTypdefaultbin(typdefaultbin);
        setTypdefault(typdefault);
        setTypacl(typacl);
        resetChangedOnNotNull();
    }

    public PgTypeRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgType value) {
        super(PgType.PG_TYPE);

        if (value != null) {
            setOid(value.getOid());
            setTypname(value.getTypname());
            setTypnamespace(value.getTypnamespace());
            setTypowner(value.getTypowner());
            setTyplen(value.getTyplen());
            setTypbyval(value.getTypbyval());
            setTyptype(value.getTyptype());
            setTypcategory(value.getTypcategory());
            setTypispreferred(value.getTypispreferred());
            setTypisdefined(value.getTypisdefined());
            setTypdelim(value.getTypdelim());
            setTyprelid(value.getTyprelid());
            setTypsubscript(value.getTypsubscript());
            setTypelem(value.getTypelem());
            setTyparray(value.getTyparray());
            setTypinput(value.getTypinput());
            setTypoutput(value.getTypoutput());
            setTypreceive(value.getTypreceive());
            setTypsend(value.getTypsend());
            setTypmodin(value.getTypmodin());
            setTypmodout(value.getTypmodout());
            setTypanalyze(value.getTypanalyze());
            setTypalign(value.getTypalign());
            setTypstorage(value.getTypstorage());
            setTypnotnull(value.getTypnotnull());
            setTypbasetype(value.getTypbasetype());
            setTyptypmod(value.getTyptypmod());
            setTypndims(value.getTypndims());
            setTypcollation(value.getTypcollation());
            setTypdefaultbin(value.getTypdefaultbin());
            setTypdefault(value.getTypdefault());
            setTypacl(value.getTypacl());
            resetChangedOnNotNull();
        }
    }
}
