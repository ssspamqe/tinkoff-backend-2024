/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables;


import edu.java.domain.jooq.pg_catalog.PgCatalog;
import edu.java.domain.jooq.pg_catalog.tables.records.PgStatProgressVacuumRecord;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatProgressVacuum extends TableImpl<PgStatProgressVacuumRecord> {

    private static final long serialVersionUID = 1L;

    public static final PgStatProgressVacuum PG_STAT_PROGRESS_VACUUM = new PgStatProgressVacuum();

    @Override
    @NotNull
    public Class<PgStatProgressVacuumRecord> getRecordType() {
        return PgStatProgressVacuumRecord.class;
    }

    public final TableField<PgStatProgressVacuumRecord, Integer> PID = createField(DSL.name("pid"), SQLDataType.INTEGER, this, "");

    public final TableField<PgStatProgressVacuumRecord, Long> DATID = createField(DSL.name("datid"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressVacuumRecord, String> DATNAME = createField(DSL.name("datname"), SQLDataType.VARCHAR, this, "");

    public final TableField<PgStatProgressVacuumRecord, Long> RELID = createField(DSL.name("relid"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressVacuumRecord, String> PHASE = createField(DSL.name("phase"), SQLDataType.CLOB, this, "");

    public final TableField<PgStatProgressVacuumRecord, Long> HEAP_BLKS_TOTAL = createField(DSL.name("heap_blks_total"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressVacuumRecord, Long> HEAP_BLKS_SCANNED = createField(DSL.name("heap_blks_scanned"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressVacuumRecord, Long> HEAP_BLKS_VACUUMED = createField(DSL.name("heap_blks_vacuumed"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressVacuumRecord, Long> INDEX_VACUUM_COUNT = createField(DSL.name("index_vacuum_count"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressVacuumRecord, Long> MAX_DEAD_TUPLES = createField(DSL.name("max_dead_tuples"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatProgressVacuumRecord, Long> NUM_DEAD_TUPLES = createField(DSL.name("num_dead_tuples"), SQLDataType.BIGINT, this, "");

    private PgStatProgressVacuum(Name alias, Table<PgStatProgressVacuumRecord> aliased) {
        this(alias, aliased, null);
    }

    private PgStatProgressVacuum(Name alias, Table<PgStatProgressVacuumRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view());
    }

    public PgStatProgressVacuum(String alias) {
        this(DSL.name(alias), PG_STAT_PROGRESS_VACUUM);
    }

    public PgStatProgressVacuum(Name alias) {
        this(alias, PG_STAT_PROGRESS_VACUUM);
    }

    public PgStatProgressVacuum() {
        this(DSL.name("pg_stat_progress_vacuum"), null);
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : PgCatalog.PG_CATALOG;
    }

    @Override
    @NotNull
    public PgStatProgressVacuum as(String alias) {
        return new PgStatProgressVacuum(DSL.name(alias), this);
    }

    @Override
    @NotNull
    public PgStatProgressVacuum as(Name alias) {
        return new PgStatProgressVacuum(alias, this);
    }

    @Override
    @NotNull
    public PgStatProgressVacuum as(Table<?> alias) {
        return new PgStatProgressVacuum(alias.getQualifiedName(), this);
    }

    @Override
    @NotNull
    public PgStatProgressVacuum rename(String name) {
        return new PgStatProgressVacuum(DSL.name(name), null);
    }

    @Override
    @NotNull
    public PgStatProgressVacuum rename(Name name) {
        return new PgStatProgressVacuum(name, null);
    }

    @Override
    @NotNull
    public PgStatProgressVacuum rename(Table<?> name) {
        return new PgStatProgressVacuum(name.getQualifiedName(), null);
    }
}
