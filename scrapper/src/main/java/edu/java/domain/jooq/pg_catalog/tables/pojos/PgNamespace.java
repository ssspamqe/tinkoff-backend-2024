/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.util.Arrays;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgNamespace implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long oid;
    private String nspname;
    private Long nspowner;
    private String[] nspacl;

    public PgNamespace() {}

    public PgNamespace(PgNamespace value) {
        this.oid = value.oid;
        this.nspname = value.nspname;
        this.nspowner = value.nspowner;
        this.nspacl = value.nspacl;
    }

    @ConstructorProperties({ "oid", "nspname", "nspowner", "nspacl" })
    public PgNamespace(
        @NotNull Long oid,
        @NotNull String nspname,
        @NotNull Long nspowner,
        @Nullable String[] nspacl
    ) {
        this.oid = oid;
        this.nspname = nspname;
        this.nspowner = nspowner;
        this.nspacl = nspacl;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getOid() {
        return this.oid;
    }

    public void setOid(@NotNull Long oid) {
        this.oid = oid;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getNspname() {
        return this.nspname;
    }

    public void setNspname(@NotNull String nspname) {
        this.nspname = nspname;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getNspowner() {
        return this.nspowner;
    }

    public void setNspowner(@NotNull Long nspowner) {
        this.nspowner = nspowner;
    }

    @Nullable
    public String[] getNspacl() {
        return this.nspacl;
    }

    public void setNspacl(@Nullable String[] nspacl) {
        this.nspacl = nspacl;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PgNamespace other = (PgNamespace) obj;
        if (this.oid == null) {
            if (other.oid != null)
                return false;
        }
        else if (!this.oid.equals(other.oid))
            return false;
        if (this.nspname == null) {
            if (other.nspname != null)
                return false;
        }
        else if (!this.nspname.equals(other.nspname))
            return false;
        if (this.nspowner == null) {
            if (other.nspowner != null)
                return false;
        }
        else if (!this.nspowner.equals(other.nspowner))
            return false;
        if (this.nspacl == null) {
            if (other.nspacl != null)
                return false;
        }
        else if (!Arrays.deepEquals(this.nspacl, other.nspacl))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.oid == null) ? 0 : this.oid.hashCode());
        result = prime * result + ((this.nspname == null) ? 0 : this.nspname.hashCode());
        result = prime * result + ((this.nspowner == null) ? 0 : this.nspowner.hashCode());
        result = prime * result + ((this.nspacl == null) ? 0 : Arrays.deepHashCode(this.nspacl));
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgNamespace (");

        sb.append(oid);
        sb.append(", ").append(nspname);
        sb.append(", ").append(nspowner);
        sb.append(", ").append(Arrays.deepToString(nspacl));

        sb.append(")");
        return sb.toString();
    }
}
