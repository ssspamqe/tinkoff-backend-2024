/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgAmop;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgAmopRecord extends TableRecordImpl<PgAmopRecord> {

    private static final long serialVersionUID = 1L;

    public void setOid(@NotNull Long value) {
        set(0, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getOid() {
        return (Long) get(0);
    }

    public void setAmopfamily(@NotNull Long value) {
        set(1, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getAmopfamily() {
        return (Long) get(1);
    }

    public void setAmoplefttype(@NotNull Long value) {
        set(2, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getAmoplefttype() {
        return (Long) get(2);
    }

    public void setAmoprighttype(@NotNull Long value) {
        set(3, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getAmoprighttype() {
        return (Long) get(3);
    }

    public void setAmopstrategy(@NotNull Short value) {
        set(4, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Short getAmopstrategy() {
        return (Short) get(4);
    }

    public void setAmoppurpose(@NotNull String value) {
        set(5, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getAmoppurpose() {
        return (String) get(5);
    }

    public void setAmopopr(@NotNull Long value) {
        set(6, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getAmopopr() {
        return (Long) get(6);
    }

    public void setAmopmethod(@NotNull Long value) {
        set(7, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getAmopmethod() {
        return (Long) get(7);
    }

    public void setAmopsortfamily(@NotNull Long value) {
        set(8, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getAmopsortfamily() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PgAmopRecord() {
        super(PgAmop.PG_AMOP);
    }

    @ConstructorProperties({ "oid", "amopfamily", "amoplefttype", "amoprighttype", "amopstrategy", "amoppurpose", "amopopr", "amopmethod", "amopsortfamily" })
    public PgAmopRecord(@NotNull Long oid, @NotNull Long amopfamily, @NotNull Long amoplefttype, @NotNull Long amoprighttype, @NotNull Short amopstrategy, @NotNull String amoppurpose, @NotNull Long amopopr, @NotNull Long amopmethod, @NotNull Long amopsortfamily) {
        super(PgAmop.PG_AMOP);

        setOid(oid);
        setAmopfamily(amopfamily);
        setAmoplefttype(amoplefttype);
        setAmoprighttype(amoprighttype);
        setAmopstrategy(amopstrategy);
        setAmoppurpose(amoppurpose);
        setAmopopr(amopopr);
        setAmopmethod(amopmethod);
        setAmopsortfamily(amopsortfamily);
        resetChangedOnNotNull();
    }

    public PgAmopRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgAmop value) {
        super(PgAmop.PG_AMOP);

        if (value != null) {
            setOid(value.getOid());
            setAmopfamily(value.getAmopfamily());
            setAmoplefttype(value.getAmoplefttype());
            setAmoprighttype(value.getAmoprighttype());
            setAmopstrategy(value.getAmopstrategy());
            setAmoppurpose(value.getAmoppurpose());
            setAmopopr(value.getAmopopr());
            setAmopmethod(value.getAmopmethod());
            setAmopsortfamily(value.getAmopsortfamily());
            resetChangedOnNotNull();
        }
    }
}
