/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.util.Arrays;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class _PgUserMappings implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long oid;
    private String[] umoptions;
    private Long umuser;
    private String authorizationIdentifier;
    private String foreignServerCatalog;
    private String foreignServerName;
    private String srvowner;

    public _PgUserMappings() {}

    public _PgUserMappings(_PgUserMappings value) {
        this.oid = value.oid;
        this.umoptions = value.umoptions;
        this.umuser = value.umuser;
        this.authorizationIdentifier = value.authorizationIdentifier;
        this.foreignServerCatalog = value.foreignServerCatalog;
        this.foreignServerName = value.foreignServerName;
        this.srvowner = value.srvowner;
    }

    @ConstructorProperties({ "oid", "umoptions", "umuser", "authorizationIdentifier", "foreignServerCatalog", "foreignServerName", "srvowner" })
    public _PgUserMappings(
        @Nullable Long oid,
        @Nullable String[] umoptions,
        @Nullable Long umuser,
        @Nullable String authorizationIdentifier,
        @Nullable String foreignServerCatalog,
        @Nullable String foreignServerName,
        @Nullable String srvowner
    ) {
        this.oid = oid;
        this.umoptions = umoptions;
        this.umuser = umuser;
        this.authorizationIdentifier = authorizationIdentifier;
        this.foreignServerCatalog = foreignServerCatalog;
        this.foreignServerName = foreignServerName;
        this.srvowner = srvowner;
    }

    @Nullable
    public Long getOid() {
        return this.oid;
    }

    public void setOid(@Nullable Long oid) {
        this.oid = oid;
    }

    @Nullable
    public String[] getUmoptions() {
        return this.umoptions;
    }

    public void setUmoptions(@Nullable String[] umoptions) {
        this.umoptions = umoptions;
    }

    @Nullable
    public Long getUmuser() {
        return this.umuser;
    }

    public void setUmuser(@Nullable Long umuser) {
        this.umuser = umuser;
    }

    @Nullable
    public String getAuthorizationIdentifier() {
        return this.authorizationIdentifier;
    }

    public void setAuthorizationIdentifier(@Nullable String authorizationIdentifier) {
        this.authorizationIdentifier = authorizationIdentifier;
    }

    @Nullable
    public String getForeignServerCatalog() {
        return this.foreignServerCatalog;
    }

    public void setForeignServerCatalog(@Nullable String foreignServerCatalog) {
        this.foreignServerCatalog = foreignServerCatalog;
    }

    @Nullable
    public String getForeignServerName() {
        return this.foreignServerName;
    }

    public void setForeignServerName(@Nullable String foreignServerName) {
        this.foreignServerName = foreignServerName;
    }

    @Nullable
    public String getSrvowner() {
        return this.srvowner;
    }

    public void setSrvowner(@Nullable String srvowner) {
        this.srvowner = srvowner;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final _PgUserMappings other = (_PgUserMappings) obj;
        if (this.oid == null) {
            if (other.oid != null)
                return false;
        }
        else if (!this.oid.equals(other.oid))
            return false;
        if (this.umoptions == null) {
            if (other.umoptions != null)
                return false;
        }
        else if (!Arrays.deepEquals(this.umoptions, other.umoptions))
            return false;
        if (this.umuser == null) {
            if (other.umuser != null)
                return false;
        }
        else if (!this.umuser.equals(other.umuser))
            return false;
        if (this.authorizationIdentifier == null) {
            if (other.authorizationIdentifier != null)
                return false;
        }
        else if (!this.authorizationIdentifier.equals(other.authorizationIdentifier))
            return false;
        if (this.foreignServerCatalog == null) {
            if (other.foreignServerCatalog != null)
                return false;
        }
        else if (!this.foreignServerCatalog.equals(other.foreignServerCatalog))
            return false;
        if (this.foreignServerName == null) {
            if (other.foreignServerName != null)
                return false;
        }
        else if (!this.foreignServerName.equals(other.foreignServerName))
            return false;
        if (this.srvowner == null) {
            if (other.srvowner != null)
                return false;
        }
        else if (!this.srvowner.equals(other.srvowner))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.oid == null) ? 0 : this.oid.hashCode());
        result = prime * result + ((this.umoptions == null) ? 0 : Arrays.deepHashCode(this.umoptions));
        result = prime * result + ((this.umuser == null) ? 0 : this.umuser.hashCode());
        result = prime * result + ((this.authorizationIdentifier == null) ? 0 : this.authorizationIdentifier.hashCode());
        result = prime * result + ((this.foreignServerCatalog == null) ? 0 : this.foreignServerCatalog.hashCode());
        result = prime * result + ((this.foreignServerName == null) ? 0 : this.foreignServerName.hashCode());
        result = prime * result + ((this.srvowner == null) ? 0 : this.srvowner.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("_PgUserMappings (");

        sb.append(oid);
        sb.append(", ").append(Arrays.deepToString(umoptions));
        sb.append(", ").append(umuser);
        sb.append(", ").append(authorizationIdentifier);
        sb.append(", ").append(foreignServerCatalog);
        sb.append(", ").append(foreignServerName);
        sb.append(", ").append(srvowner);

        sb.append(")");
        return sb.toString();
    }
}
