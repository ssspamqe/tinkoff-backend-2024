/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.util.Arrays;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgConstraint implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long oid;
    private String conname;
    private Long connamespace;
    private String contype;
    private Boolean condeferrable;
    private Boolean condeferred;
    private Boolean convalidated;
    private Long conrelid;
    private Long contypid;
    private Long conindid;
    private Long conparentid;
    private Long confrelid;
    private String confupdtype;
    private String confdeltype;
    private String confmatchtype;
    private Boolean conislocal;
    private Short coninhcount;
    private Boolean connoinherit;
    private Short[] conkey;
    private Short[] confkey;
    private Long[] conpfeqop;
    private Long[] conppeqop;
    private Long[] conffeqop;
    private Short[] confdelsetcols;
    private Long[] conexclop;
    private Object conbin;

    public PgConstraint() {}

    public PgConstraint(PgConstraint value) {
        this.oid = value.oid;
        this.conname = value.conname;
        this.connamespace = value.connamespace;
        this.contype = value.contype;
        this.condeferrable = value.condeferrable;
        this.condeferred = value.condeferred;
        this.convalidated = value.convalidated;
        this.conrelid = value.conrelid;
        this.contypid = value.contypid;
        this.conindid = value.conindid;
        this.conparentid = value.conparentid;
        this.confrelid = value.confrelid;
        this.confupdtype = value.confupdtype;
        this.confdeltype = value.confdeltype;
        this.confmatchtype = value.confmatchtype;
        this.conislocal = value.conislocal;
        this.coninhcount = value.coninhcount;
        this.connoinherit = value.connoinherit;
        this.conkey = value.conkey;
        this.confkey = value.confkey;
        this.conpfeqop = value.conpfeqop;
        this.conppeqop = value.conppeqop;
        this.conffeqop = value.conffeqop;
        this.confdelsetcols = value.confdelsetcols;
        this.conexclop = value.conexclop;
        this.conbin = value.conbin;
    }

    @ConstructorProperties({ "oid", "conname", "connamespace", "contype", "condeferrable", "condeferred", "convalidated", "conrelid", "contypid", "conindid", "conparentid", "confrelid", "confupdtype", "confdeltype", "confmatchtype", "conislocal", "coninhcount", "connoinherit", "conkey", "confkey", "conpfeqop", "conppeqop", "conffeqop", "confdelsetcols", "conexclop", "conbin" })
    public PgConstraint(
        @NotNull Long oid,
        @NotNull String conname,
        @NotNull Long connamespace,
        @NotNull String contype,
        @NotNull Boolean condeferrable,
        @NotNull Boolean condeferred,
        @NotNull Boolean convalidated,
        @NotNull Long conrelid,
        @NotNull Long contypid,
        @NotNull Long conindid,
        @NotNull Long conparentid,
        @NotNull Long confrelid,
        @NotNull String confupdtype,
        @NotNull String confdeltype,
        @NotNull String confmatchtype,
        @NotNull Boolean conislocal,
        @NotNull Short coninhcount,
        @NotNull Boolean connoinherit,
        @Nullable Short[] conkey,
        @Nullable Short[] confkey,
        @Nullable Long[] conpfeqop,
        @Nullable Long[] conppeqop,
        @Nullable Long[] conffeqop,
        @Nullable Short[] confdelsetcols,
        @Nullable Long[] conexclop,
        @Nullable Object conbin
    ) {
        this.oid = oid;
        this.conname = conname;
        this.connamespace = connamespace;
        this.contype = contype;
        this.condeferrable = condeferrable;
        this.condeferred = condeferred;
        this.convalidated = convalidated;
        this.conrelid = conrelid;
        this.contypid = contypid;
        this.conindid = conindid;
        this.conparentid = conparentid;
        this.confrelid = confrelid;
        this.confupdtype = confupdtype;
        this.confdeltype = confdeltype;
        this.confmatchtype = confmatchtype;
        this.conislocal = conislocal;
        this.coninhcount = coninhcount;
        this.connoinherit = connoinherit;
        this.conkey = conkey;
        this.confkey = confkey;
        this.conpfeqop = conpfeqop;
        this.conppeqop = conppeqop;
        this.conffeqop = conffeqop;
        this.confdelsetcols = confdelsetcols;
        this.conexclop = conexclop;
        this.conbin = conbin;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getOid() {
        return this.oid;
    }

    public void setOid(@NotNull Long oid) {
        this.oid = oid;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getConname() {
        return this.conname;
    }

    public void setConname(@NotNull String conname) {
        this.conname = conname;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getConnamespace() {
        return this.connamespace;
    }

    public void setConnamespace(@NotNull Long connamespace) {
        this.connamespace = connamespace;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getContype() {
        return this.contype;
    }

    public void setContype(@NotNull String contype) {
        this.contype = contype;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getCondeferrable() {
        return this.condeferrable;
    }

    public void setCondeferrable(@NotNull Boolean condeferrable) {
        this.condeferrable = condeferrable;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getCondeferred() {
        return this.condeferred;
    }

    public void setCondeferred(@NotNull Boolean condeferred) {
        this.condeferred = condeferred;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getConvalidated() {
        return this.convalidated;
    }

    public void setConvalidated(@NotNull Boolean convalidated) {
        this.convalidated = convalidated;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getConrelid() {
        return this.conrelid;
    }

    public void setConrelid(@NotNull Long conrelid) {
        this.conrelid = conrelid;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getContypid() {
        return this.contypid;
    }

    public void setContypid(@NotNull Long contypid) {
        this.contypid = contypid;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getConindid() {
        return this.conindid;
    }

    public void setConindid(@NotNull Long conindid) {
        this.conindid = conindid;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getConparentid() {
        return this.conparentid;
    }

    public void setConparentid(@NotNull Long conparentid) {
        this.conparentid = conparentid;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getConfrelid() {
        return this.confrelid;
    }

    public void setConfrelid(@NotNull Long confrelid) {
        this.confrelid = confrelid;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getConfupdtype() {
        return this.confupdtype;
    }

    public void setConfupdtype(@NotNull String confupdtype) {
        this.confupdtype = confupdtype;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getConfdeltype() {
        return this.confdeltype;
    }

    public void setConfdeltype(@NotNull String confdeltype) {
        this.confdeltype = confdeltype;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getConfmatchtype() {
        return this.confmatchtype;
    }

    public void setConfmatchtype(@NotNull String confmatchtype) {
        this.confmatchtype = confmatchtype;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getConislocal() {
        return this.conislocal;
    }

    public void setConislocal(@NotNull Boolean conislocal) {
        this.conislocal = conislocal;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Short getConinhcount() {
        return this.coninhcount;
    }

    public void setConinhcount(@NotNull Short coninhcount) {
        this.coninhcount = coninhcount;
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Boolean getConnoinherit() {
        return this.connoinherit;
    }

    public void setConnoinherit(@NotNull Boolean connoinherit) {
        this.connoinherit = connoinherit;
    }

    @Nullable
    public Short[] getConkey() {
        return this.conkey;
    }

    public void setConkey(@Nullable Short[] conkey) {
        this.conkey = conkey;
    }

    @Nullable
    public Short[] getConfkey() {
        return this.confkey;
    }

    public void setConfkey(@Nullable Short[] confkey) {
        this.confkey = confkey;
    }

    @Nullable
    public Long[] getConpfeqop() {
        return this.conpfeqop;
    }

    public void setConpfeqop(@Nullable Long[] conpfeqop) {
        this.conpfeqop = conpfeqop;
    }

    @Nullable
    public Long[] getConppeqop() {
        return this.conppeqop;
    }

    public void setConppeqop(@Nullable Long[] conppeqop) {
        this.conppeqop = conppeqop;
    }

    @Nullable
    public Long[] getConffeqop() {
        return this.conffeqop;
    }

    public void setConffeqop(@Nullable Long[] conffeqop) {
        this.conffeqop = conffeqop;
    }

    @Nullable
    public Short[] getConfdelsetcols() {
        return this.confdelsetcols;
    }

    public void setConfdelsetcols(@Nullable Short[] confdelsetcols) {
        this.confdelsetcols = confdelsetcols;
    }

    @Nullable
    public Long[] getConexclop() {
        return this.conexclop;
    }

    public void setConexclop(@Nullable Long[] conexclop) {
        this.conexclop = conexclop;
    }

    @Deprecated
    @Nullable
    public Object getConbin() {
        return this.conbin;
    }

    @Deprecated
    public void setConbin(@Nullable Object conbin) {
        this.conbin = conbin;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PgConstraint other = (PgConstraint) obj;
        if (this.oid == null) {
            if (other.oid != null)
                return false;
        }
        else if (!this.oid.equals(other.oid))
            return false;
        if (this.conname == null) {
            if (other.conname != null)
                return false;
        }
        else if (!this.conname.equals(other.conname))
            return false;
        if (this.connamespace == null) {
            if (other.connamespace != null)
                return false;
        }
        else if (!this.connamespace.equals(other.connamespace))
            return false;
        if (this.contype == null) {
            if (other.contype != null)
                return false;
        }
        else if (!this.contype.equals(other.contype))
            return false;
        if (this.condeferrable == null) {
            if (other.condeferrable != null)
                return false;
        }
        else if (!this.condeferrable.equals(other.condeferrable))
            return false;
        if (this.condeferred == null) {
            if (other.condeferred != null)
                return false;
        }
        else if (!this.condeferred.equals(other.condeferred))
            return false;
        if (this.convalidated == null) {
            if (other.convalidated != null)
                return false;
        }
        else if (!this.convalidated.equals(other.convalidated))
            return false;
        if (this.conrelid == null) {
            if (other.conrelid != null)
                return false;
        }
        else if (!this.conrelid.equals(other.conrelid))
            return false;
        if (this.contypid == null) {
            if (other.contypid != null)
                return false;
        }
        else if (!this.contypid.equals(other.contypid))
            return false;
        if (this.conindid == null) {
            if (other.conindid != null)
                return false;
        }
        else if (!this.conindid.equals(other.conindid))
            return false;
        if (this.conparentid == null) {
            if (other.conparentid != null)
                return false;
        }
        else if (!this.conparentid.equals(other.conparentid))
            return false;
        if (this.confrelid == null) {
            if (other.confrelid != null)
                return false;
        }
        else if (!this.confrelid.equals(other.confrelid))
            return false;
        if (this.confupdtype == null) {
            if (other.confupdtype != null)
                return false;
        }
        else if (!this.confupdtype.equals(other.confupdtype))
            return false;
        if (this.confdeltype == null) {
            if (other.confdeltype != null)
                return false;
        }
        else if (!this.confdeltype.equals(other.confdeltype))
            return false;
        if (this.confmatchtype == null) {
            if (other.confmatchtype != null)
                return false;
        }
        else if (!this.confmatchtype.equals(other.confmatchtype))
            return false;
        if (this.conislocal == null) {
            if (other.conislocal != null)
                return false;
        }
        else if (!this.conislocal.equals(other.conislocal))
            return false;
        if (this.coninhcount == null) {
            if (other.coninhcount != null)
                return false;
        }
        else if (!this.coninhcount.equals(other.coninhcount))
            return false;
        if (this.connoinherit == null) {
            if (other.connoinherit != null)
                return false;
        }
        else if (!this.connoinherit.equals(other.connoinherit))
            return false;
        if (this.conkey == null) {
            if (other.conkey != null)
                return false;
        }
        else if (!Arrays.deepEquals(this.conkey, other.conkey))
            return false;
        if (this.confkey == null) {
            if (other.confkey != null)
                return false;
        }
        else if (!Arrays.deepEquals(this.confkey, other.confkey))
            return false;
        if (this.conpfeqop == null) {
            if (other.conpfeqop != null)
                return false;
        }
        else if (!Arrays.deepEquals(this.conpfeqop, other.conpfeqop))
            return false;
        if (this.conppeqop == null) {
            if (other.conppeqop != null)
                return false;
        }
        else if (!Arrays.deepEquals(this.conppeqop, other.conppeqop))
            return false;
        if (this.conffeqop == null) {
            if (other.conffeqop != null)
                return false;
        }
        else if (!Arrays.deepEquals(this.conffeqop, other.conffeqop))
            return false;
        if (this.confdelsetcols == null) {
            if (other.confdelsetcols != null)
                return false;
        }
        else if (!Arrays.deepEquals(this.confdelsetcols, other.confdelsetcols))
            return false;
        if (this.conexclop == null) {
            if (other.conexclop != null)
                return false;
        }
        else if (!Arrays.deepEquals(this.conexclop, other.conexclop))
            return false;
        if (this.conbin == null) {
            if (other.conbin != null)
                return false;
        }
        else if (!this.conbin.equals(other.conbin))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.oid == null) ? 0 : this.oid.hashCode());
        result = prime * result + ((this.conname == null) ? 0 : this.conname.hashCode());
        result = prime * result + ((this.connamespace == null) ? 0 : this.connamespace.hashCode());
        result = prime * result + ((this.contype == null) ? 0 : this.contype.hashCode());
        result = prime * result + ((this.condeferrable == null) ? 0 : this.condeferrable.hashCode());
        result = prime * result + ((this.condeferred == null) ? 0 : this.condeferred.hashCode());
        result = prime * result + ((this.convalidated == null) ? 0 : this.convalidated.hashCode());
        result = prime * result + ((this.conrelid == null) ? 0 : this.conrelid.hashCode());
        result = prime * result + ((this.contypid == null) ? 0 : this.contypid.hashCode());
        result = prime * result + ((this.conindid == null) ? 0 : this.conindid.hashCode());
        result = prime * result + ((this.conparentid == null) ? 0 : this.conparentid.hashCode());
        result = prime * result + ((this.confrelid == null) ? 0 : this.confrelid.hashCode());
        result = prime * result + ((this.confupdtype == null) ? 0 : this.confupdtype.hashCode());
        result = prime * result + ((this.confdeltype == null) ? 0 : this.confdeltype.hashCode());
        result = prime * result + ((this.confmatchtype == null) ? 0 : this.confmatchtype.hashCode());
        result = prime * result + ((this.conislocal == null) ? 0 : this.conislocal.hashCode());
        result = prime * result + ((this.coninhcount == null) ? 0 : this.coninhcount.hashCode());
        result = prime * result + ((this.connoinherit == null) ? 0 : this.connoinherit.hashCode());
        result = prime * result + ((this.conkey == null) ? 0 : Arrays.deepHashCode(this.conkey));
        result = prime * result + ((this.confkey == null) ? 0 : Arrays.deepHashCode(this.confkey));
        result = prime * result + ((this.conpfeqop == null) ? 0 : Arrays.deepHashCode(this.conpfeqop));
        result = prime * result + ((this.conppeqop == null) ? 0 : Arrays.deepHashCode(this.conppeqop));
        result = prime * result + ((this.conffeqop == null) ? 0 : Arrays.deepHashCode(this.conffeqop));
        result = prime * result + ((this.confdelsetcols == null) ? 0 : Arrays.deepHashCode(this.confdelsetcols));
        result = prime * result + ((this.conexclop == null) ? 0 : Arrays.deepHashCode(this.conexclop));
        result = prime * result + ((this.conbin == null) ? 0 : this.conbin.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PgConstraint (");

        sb.append(oid);
        sb.append(", ").append(conname);
        sb.append(", ").append(connamespace);
        sb.append(", ").append(contype);
        sb.append(", ").append(condeferrable);
        sb.append(", ").append(condeferred);
        sb.append(", ").append(convalidated);
        sb.append(", ").append(conrelid);
        sb.append(", ").append(contypid);
        sb.append(", ").append(conindid);
        sb.append(", ").append(conparentid);
        sb.append(", ").append(confrelid);
        sb.append(", ").append(confupdtype);
        sb.append(", ").append(confdeltype);
        sb.append(", ").append(confmatchtype);
        sb.append(", ").append(conislocal);
        sb.append(", ").append(coninhcount);
        sb.append(", ").append(connoinherit);
        sb.append(", ").append(Arrays.deepToString(conkey));
        sb.append(", ").append(Arrays.deepToString(confkey));
        sb.append(", ").append(Arrays.deepToString(conpfeqop));
        sb.append(", ").append(Arrays.deepToString(conppeqop));
        sb.append(", ").append(Arrays.deepToString(conffeqop));
        sb.append(", ").append(Arrays.deepToString(confdelsetcols));
        sb.append(", ").append(Arrays.deepToString(conexclop));
        sb.append(", ").append(conbin);

        sb.append(")");
        return sb.toString();
    }
}
