/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables;


import edu.java.domain.jooq.pg_catalog.PgCatalog;
import edu.java.domain.jooq.pg_catalog.tables.records.PgEnumRecord;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgEnum extends TableImpl<PgEnumRecord> {

    private static final long serialVersionUID = 1L;

    public static final PgEnum PG_ENUM = new PgEnum();

    @Override
    @NotNull
    public Class<PgEnumRecord> getRecordType() {
        return PgEnumRecord.class;
    }

    public final TableField<PgEnumRecord, Long> OID = createField(DSL.name("oid"), SQLDataType.BIGINT.nullable(false), this, "");

    public final TableField<PgEnumRecord, Long> ENUMTYPID = createField(DSL.name("enumtypid"), SQLDataType.BIGINT.nullable(false), this, "");

    public final TableField<PgEnumRecord, Float> ENUMSORTORDER = createField(DSL.name("enumsortorder"), SQLDataType.REAL.nullable(false), this, "");

    public final TableField<PgEnumRecord, String> ENUMLABEL = createField(DSL.name("enumlabel"), SQLDataType.VARCHAR.nullable(false), this, "");

    private PgEnum(Name alias, Table<PgEnumRecord> aliased) {
        this(alias, aliased, null);
    }

    private PgEnum(Name alias, Table<PgEnumRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public PgEnum(String alias) {
        this(DSL.name(alias), PG_ENUM);
    }

    public PgEnum(Name alias) {
        this(alias, PG_ENUM);
    }

    public PgEnum() {
        this(DSL.name("pg_enum"), null);
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : PgCatalog.PG_CATALOG;
    }

    @Override
    @NotNull
    public PgEnum as(String alias) {
        return new PgEnum(DSL.name(alias), this);
    }

    @Override
    @NotNull
    public PgEnum as(Name alias) {
        return new PgEnum(alias, this);
    }

    @Override
    @NotNull
    public PgEnum as(Table<?> alias) {
        return new PgEnum(alias.getQualifiedName(), this);
    }

    @Override
    @NotNull
    public PgEnum rename(String name) {
        return new PgEnum(DSL.name(name), null);
    }

    @Override
    @NotNull
    public PgEnum rename(Name name) {
        return new PgEnum(name, null);
    }

    @Override
    @NotNull
    public PgEnum rename(Table<?> name) {
        return new PgEnum(name.getQualifiedName(), null);
    }
}
