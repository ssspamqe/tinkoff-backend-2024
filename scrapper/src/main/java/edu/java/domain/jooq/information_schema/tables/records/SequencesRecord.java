/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.records;


import edu.java.domain.jooq.information_schema.tables.Sequences;

import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SequencesRecord extends TableRecordImpl<SequencesRecord> {

    private static final long serialVersionUID = 1L;

    public void setSequenceCatalog(@Nullable String value) {
        set(0, value);
    }

    @Nullable
    public String getSequenceCatalog() {
        return (String) get(0);
    }

    public void setSequenceSchema(@Nullable String value) {
        set(1, value);
    }

    @Nullable
    public String getSequenceSchema() {
        return (String) get(1);
    }

    public void setSequenceName(@Nullable String value) {
        set(2, value);
    }

    @Nullable
    public String getSequenceName() {
        return (String) get(2);
    }

    public void setDataType(@Nullable String value) {
        set(3, value);
    }

    @Nullable
    public String getDataType() {
        return (String) get(3);
    }

    public void setNumericPrecision(@Nullable Integer value) {
        set(4, value);
    }

    @Nullable
    public Integer getNumericPrecision() {
        return (Integer) get(4);
    }

    public void setNumericPrecisionRadix(@Nullable Integer value) {
        set(5, value);
    }

    @Nullable
    public Integer getNumericPrecisionRadix() {
        return (Integer) get(5);
    }

    public void setNumericScale(@Nullable Integer value) {
        set(6, value);
    }

    @Nullable
    public Integer getNumericScale() {
        return (Integer) get(6);
    }

    public void setStartValue(@Nullable String value) {
        set(7, value);
    }

    @Nullable
    public String getStartValue() {
        return (String) get(7);
    }

    public void setMinimumValue(@Nullable String value) {
        set(8, value);
    }

    @Nullable
    public String getMinimumValue() {
        return (String) get(8);
    }

    public void setMaximumValue(@Nullable String value) {
        set(9, value);
    }

    @Nullable
    public String getMaximumValue() {
        return (String) get(9);
    }

    public void setIncrement(@Nullable String value) {
        set(10, value);
    }

    @Nullable
    public String getIncrement() {
        return (String) get(10);
    }

    public void setCycleOption(@Nullable String value) {
        set(11, value);
    }

    @Size(max = 3)
    @Nullable
    public String getCycleOption() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public SequencesRecord() {
        super(Sequences.SEQUENCES);
    }

    @ConstructorProperties({ "sequenceCatalog", "sequenceSchema", "sequenceName", "dataType", "numericPrecision", "numericPrecisionRadix", "numericScale", "startValue", "minimumValue", "maximumValue", "increment", "cycleOption" })
    public SequencesRecord(@Nullable String sequenceCatalog, @Nullable String sequenceSchema, @Nullable String sequenceName, @Nullable String dataType, @Nullable Integer numericPrecision, @Nullable Integer numericPrecisionRadix, @Nullable Integer numericScale, @Nullable String startValue, @Nullable String minimumValue, @Nullable String maximumValue, @Nullable String increment, @Nullable String cycleOption) {
        super(Sequences.SEQUENCES);

        setSequenceCatalog(sequenceCatalog);
        setSequenceSchema(sequenceSchema);
        setSequenceName(sequenceName);
        setDataType(dataType);
        setNumericPrecision(numericPrecision);
        setNumericPrecisionRadix(numericPrecisionRadix);
        setNumericScale(numericScale);
        setStartValue(startValue);
        setMinimumValue(minimumValue);
        setMaximumValue(maximumValue);
        setIncrement(increment);
        setCycleOption(cycleOption);
        resetChangedOnNotNull();
    }

    public SequencesRecord(edu.java.domain.jooq.information_schema.tables.pojos.Sequences value) {
        super(Sequences.SEQUENCES);

        if (value != null) {
            setSequenceCatalog(value.getSequenceCatalog());
            setSequenceSchema(value.getSequenceSchema());
            setSequenceName(value.getSequenceName());
            setDataType(value.getDataType());
            setNumericPrecision(value.getNumericPrecision());
            setNumericPrecisionRadix(value.getNumericPrecisionRadix());
            setNumericScale(value.getNumericScale());
            setStartValue(value.getStartValue());
            setMinimumValue(value.getMinimumValue());
            setMaximumValue(value.getMaximumValue());
            setIncrement(value.getIncrement());
            setCycleOption(value.getCycleOption());
            resetChangedOnNotNull();
        }
    }
}
