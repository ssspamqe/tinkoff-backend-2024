/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables.records;


import edu.java.domain.jooq.information_schema.tables.ReferentialConstraints;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ReferentialConstraintsRecord extends TableRecordImpl<ReferentialConstraintsRecord> {

    private static final long serialVersionUID = 1L;

    public void setConstraintCatalog(@Nullable String value) {
        set(0, value);
    }

    @Nullable
    public String getConstraintCatalog() {
        return (String) get(0);
    }

    public void setConstraintSchema(@Nullable String value) {
        set(1, value);
    }

    @Nullable
    public String getConstraintSchema() {
        return (String) get(1);
    }

    public void setConstraintName(@Nullable String value) {
        set(2, value);
    }

    @Nullable
    public String getConstraintName() {
        return (String) get(2);
    }

    public void setUniqueConstraintCatalog(@Nullable String value) {
        set(3, value);
    }

    @Nullable
    public String getUniqueConstraintCatalog() {
        return (String) get(3);
    }

    public void setUniqueConstraintSchema(@Nullable String value) {
        set(4, value);
    }

    @Nullable
    public String getUniqueConstraintSchema() {
        return (String) get(4);
    }

    public void setUniqueConstraintName(@Nullable String value) {
        set(5, value);
    }

    @Nullable
    public String getUniqueConstraintName() {
        return (String) get(5);
    }

    public void setMatchOption(@Nullable String value) {
        set(6, value);
    }

    @Nullable
    public String getMatchOption() {
        return (String) get(6);
    }

    public void setUpdateRule(@Nullable String value) {
        set(7, value);
    }

    @Nullable
    public String getUpdateRule() {
        return (String) get(7);
    }

    public void setDeleteRule(@Nullable String value) {
        set(8, value);
    }

    @Nullable
    public String getDeleteRule() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public ReferentialConstraintsRecord() {
        super(ReferentialConstraints.REFERENTIAL_CONSTRAINTS);
    }

    @ConstructorProperties({ "constraintCatalog", "constraintSchema", "constraintName", "uniqueConstraintCatalog", "uniqueConstraintSchema", "uniqueConstraintName", "matchOption", "updateRule", "deleteRule" })
    public ReferentialConstraintsRecord(@Nullable String constraintCatalog, @Nullable String constraintSchema, @Nullable String constraintName, @Nullable String uniqueConstraintCatalog, @Nullable String uniqueConstraintSchema, @Nullable String uniqueConstraintName, @Nullable String matchOption, @Nullable String updateRule, @Nullable String deleteRule) {
        super(ReferentialConstraints.REFERENTIAL_CONSTRAINTS);

        setConstraintCatalog(constraintCatalog);
        setConstraintSchema(constraintSchema);
        setConstraintName(constraintName);
        setUniqueConstraintCatalog(uniqueConstraintCatalog);
        setUniqueConstraintSchema(uniqueConstraintSchema);
        setUniqueConstraintName(uniqueConstraintName);
        setMatchOption(matchOption);
        setUpdateRule(updateRule);
        setDeleteRule(deleteRule);
        resetChangedOnNotNull();
    }

    public ReferentialConstraintsRecord(edu.java.domain.jooq.information_schema.tables.pojos.ReferentialConstraints value) {
        super(ReferentialConstraints.REFERENTIAL_CONSTRAINTS);

        if (value != null) {
            setConstraintCatalog(value.getConstraintCatalog());
            setConstraintSchema(value.getConstraintSchema());
            setConstraintName(value.getConstraintName());
            setUniqueConstraintCatalog(value.getUniqueConstraintCatalog());
            setUniqueConstraintSchema(value.getUniqueConstraintSchema());
            setUniqueConstraintName(value.getUniqueConstraintName());
            setMatchOption(value.getMatchOption());
            setUpdateRule(value.getUpdateRule());
            setDeleteRule(value.getDeleteRule());
            resetChangedOnNotNull();
        }
    }
}
