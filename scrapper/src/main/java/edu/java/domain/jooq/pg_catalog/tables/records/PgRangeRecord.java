/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.records;


import edu.java.domain.jooq.pg_catalog.tables.PgRange;

import java.beans.ConstructorProperties;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jooq.impl.TableRecordImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgRangeRecord extends TableRecordImpl<PgRangeRecord> {

    private static final long serialVersionUID = 1L;

    public void setRngtypid(@NotNull Long value) {
        set(0, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getRngtypid() {
        return (Long) get(0);
    }

    public void setRngsubtype(@NotNull Long value) {
        set(1, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getRngsubtype() {
        return (Long) get(1);
    }

    public void setRngmultitypid(@NotNull Long value) {
        set(2, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getRngmultitypid() {
        return (Long) get(2);
    }

    public void setRngcollation(@NotNull Long value) {
        set(3, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getRngcollation() {
        return (Long) get(3);
    }

    public void setRngsubopc(@NotNull Long value) {
        set(4, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getRngsubopc() {
        return (Long) get(4);
    }

    public void setRngcanonical(@NotNull String value) {
        set(5, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getRngcanonical() {
        return (String) get(5);
    }

    public void setRngsubdiff(@NotNull String value) {
        set(6, value);
    }

    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getRngsubdiff() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public PgRangeRecord() {
        super(PgRange.PG_RANGE);
    }

    @ConstructorProperties({ "rngtypid", "rngsubtype", "rngmultitypid", "rngcollation", "rngsubopc", "rngcanonical", "rngsubdiff" })
    public PgRangeRecord(@NotNull Long rngtypid, @NotNull Long rngsubtype, @NotNull Long rngmultitypid, @NotNull Long rngcollation, @NotNull Long rngsubopc, @NotNull String rngcanonical, @NotNull String rngsubdiff) {
        super(PgRange.PG_RANGE);

        setRngtypid(rngtypid);
        setRngsubtype(rngsubtype);
        setRngmultitypid(rngmultitypid);
        setRngcollation(rngcollation);
        setRngsubopc(rngsubopc);
        setRngcanonical(rngcanonical);
        setRngsubdiff(rngsubdiff);
        resetChangedOnNotNull();
    }

    public PgRangeRecord(edu.java.domain.jooq.pg_catalog.tables.pojos.PgRange value) {
        super(PgRange.PG_RANGE);

        if (value != null) {
            setRngtypid(value.getRngtypid());
            setRngsubtype(value.getRngsubtype());
            setRngmultitypid(value.getRngmultitypid());
            setRngcollation(value.getRngcollation());
            setRngsubopc(value.getRngsubopc());
            setRngcanonical(value.getRngcanonical());
            setRngsubdiff(value.getRngsubdiff());
            resetChangedOnNotNull();
        }
    }
}
