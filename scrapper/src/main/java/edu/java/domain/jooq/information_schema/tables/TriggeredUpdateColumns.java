/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.information_schema.tables;


import edu.java.domain.jooq.information_schema.InformationSchema;
import edu.java.domain.jooq.information_schema.tables.records.TriggeredUpdateColumnsRecord;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TriggeredUpdateColumns extends TableImpl<TriggeredUpdateColumnsRecord> {

    private static final long serialVersionUID = 1L;

    public static final TriggeredUpdateColumns TRIGGERED_UPDATE_COLUMNS = new TriggeredUpdateColumns();

    @Override
    @NotNull
    public Class<TriggeredUpdateColumnsRecord> getRecordType() {
        return TriggeredUpdateColumnsRecord.class;
    }

    public final TableField<TriggeredUpdateColumnsRecord, String> TRIGGER_CATALOG = createField(DSL.name("trigger_catalog"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<TriggeredUpdateColumnsRecord, String> TRIGGER_SCHEMA = createField(DSL.name("trigger_schema"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<TriggeredUpdateColumnsRecord, String> TRIGGER_NAME = createField(DSL.name("trigger_name"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<TriggeredUpdateColumnsRecord, String> EVENT_OBJECT_CATALOG = createField(DSL.name("event_object_catalog"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<TriggeredUpdateColumnsRecord, String> EVENT_OBJECT_SCHEMA = createField(DSL.name("event_object_schema"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<TriggeredUpdateColumnsRecord, String> EVENT_OBJECT_TABLE = createField(DSL.name("event_object_table"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    public final TableField<TriggeredUpdateColumnsRecord, String> EVENT_OBJECT_COLUMN = createField(DSL.name("event_object_column"), edu.java.domain.jooq.information_schema.Domains.SQL_IDENTIFIER.getDataType(), this, "");

    private TriggeredUpdateColumns(Name alias, Table<TriggeredUpdateColumnsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TriggeredUpdateColumns(Name alias, Table<TriggeredUpdateColumnsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view());
    }

    public TriggeredUpdateColumns(String alias) {
        this(DSL.name(alias), TRIGGERED_UPDATE_COLUMNS);
    }

    public TriggeredUpdateColumns(Name alias) {
        this(alias, TRIGGERED_UPDATE_COLUMNS);
    }

    public TriggeredUpdateColumns() {
        this(DSL.name("triggered_update_columns"), null);
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : InformationSchema.INFORMATION_SCHEMA;
    }

    @Override
    @NotNull
    public TriggeredUpdateColumns as(String alias) {
        return new TriggeredUpdateColumns(DSL.name(alias), this);
    }

    @Override
    @NotNull
    public TriggeredUpdateColumns as(Name alias) {
        return new TriggeredUpdateColumns(alias, this);
    }

    @Override
    @NotNull
    public TriggeredUpdateColumns as(Table<?> alias) {
        return new TriggeredUpdateColumns(alias.getQualifiedName(), this);
    }

    @Override
    @NotNull
    public TriggeredUpdateColumns rename(String name) {
        return new TriggeredUpdateColumns(DSL.name(name), null);
    }

    @Override
    @NotNull
    public TriggeredUpdateColumns rename(Name name) {
        return new TriggeredUpdateColumns(name, null);
    }

    @Override
    @NotNull
    public TriggeredUpdateColumns rename(Table<?> name) {
        return new TriggeredUpdateColumns(name.getQualifiedName(), null);
    }
}
