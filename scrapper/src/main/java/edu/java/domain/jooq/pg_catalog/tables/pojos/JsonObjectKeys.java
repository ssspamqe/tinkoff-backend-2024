/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.Nullable;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JsonObjectKeys implements Serializable {

    private static final long serialVersionUID = 1L;

    private String jsonObjectKeys;

    public JsonObjectKeys() {}

    public JsonObjectKeys(JsonObjectKeys value) {
        this.jsonObjectKeys = value.jsonObjectKeys;
    }

    @ConstructorProperties({ "jsonObjectKeys" })
    public JsonObjectKeys(
        @Nullable String jsonObjectKeys
    ) {
        this.jsonObjectKeys = jsonObjectKeys;
    }

    @Nullable
    public String getJsonObjectKeys() {
        return this.jsonObjectKeys;
    }

    public void setJsonObjectKeys(@Nullable String jsonObjectKeys) {
        this.jsonObjectKeys = jsonObjectKeys;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JsonObjectKeys other = (JsonObjectKeys) obj;
        if (this.jsonObjectKeys == null) {
            if (other.jsonObjectKeys != null)
                return false;
        }
        else if (!this.jsonObjectKeys.equals(other.jsonObjectKeys))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.jsonObjectKeys == null) ? 0 : this.jsonObjectKeys.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JsonObjectKeys (");

        sb.append(jsonObjectKeys);

        sb.append(")");
        return sb.toString();
    }
}
