/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq.pg_catalog.tables;


import edu.java.domain.jooq.pg_catalog.PgCatalog;
import edu.java.domain.jooq.pg_catalog.tables.records.PgStatGetProgressInfoRecord;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgStatGetProgressInfo extends TableImpl<PgStatGetProgressInfoRecord> {

    private static final long serialVersionUID = 1L;

    public static final PgStatGetProgressInfo PG_STAT_GET_PROGRESS_INFO = new PgStatGetProgressInfo();

    @Override
    @NotNull
    public Class<PgStatGetProgressInfoRecord> getRecordType() {
        return PgStatGetProgressInfoRecord.class;
    }

    public final TableField<PgStatGetProgressInfoRecord, Integer> PID = createField(DSL.name("pid"), SQLDataType.INTEGER, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> DATID = createField(DSL.name("datid"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> RELID = createField(DSL.name("relid"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM1 = createField(DSL.name("param1"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM2 = createField(DSL.name("param2"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM3 = createField(DSL.name("param3"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM4 = createField(DSL.name("param4"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM5 = createField(DSL.name("param5"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM6 = createField(DSL.name("param6"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM7 = createField(DSL.name("param7"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM8 = createField(DSL.name("param8"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM9 = createField(DSL.name("param9"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM10 = createField(DSL.name("param10"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM11 = createField(DSL.name("param11"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM12 = createField(DSL.name("param12"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM13 = createField(DSL.name("param13"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM14 = createField(DSL.name("param14"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM15 = createField(DSL.name("param15"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM16 = createField(DSL.name("param16"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM17 = createField(DSL.name("param17"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM18 = createField(DSL.name("param18"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM19 = createField(DSL.name("param19"), SQLDataType.BIGINT, this, "");

    public final TableField<PgStatGetProgressInfoRecord, Long> PARAM20 = createField(DSL.name("param20"), SQLDataType.BIGINT, this, "");

    private PgStatGetProgressInfo(Name alias, Table<PgStatGetProgressInfoRecord> aliased) {
        this(alias, aliased, new Field[] {
            DSL.val(null, SQLDataType.CLOB)
        });
    }

    private PgStatGetProgressInfo(Name alias, Table<PgStatGetProgressInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function());
    }

    public PgStatGetProgressInfo(String alias) {
        this(DSL.name(alias), PG_STAT_GET_PROGRESS_INFO);
    }

    public PgStatGetProgressInfo(Name alias) {
        this(alias, PG_STAT_GET_PROGRESS_INFO);
    }

    public PgStatGetProgressInfo() {
        this(DSL.name("pg_stat_get_progress_info"), null);
    }

    @Override
    @Nullable
    public Schema getSchema() {
        return aliased() ? null : PgCatalog.PG_CATALOG;
    }

    @Override
    @NotNull
    public PgStatGetProgressInfo as(String alias) {
        return new PgStatGetProgressInfo(DSL.name(alias), this, parameters);
    }

    @Override
    @NotNull
    public PgStatGetProgressInfo as(Name alias) {
        return new PgStatGetProgressInfo(alias, this, parameters);
    }

    @Override
    @NotNull
    public PgStatGetProgressInfo as(Table<?> alias) {
        return new PgStatGetProgressInfo(alias.getQualifiedName(), this, parameters);
    }

    @Override
    @NotNull
    public PgStatGetProgressInfo rename(String name) {
        return new PgStatGetProgressInfo(DSL.name(name), null, parameters);
    }

    @Override
    @NotNull
    public PgStatGetProgressInfo rename(Name name) {
        return new PgStatGetProgressInfo(name, null, parameters);
    }

    @Override
    @NotNull
    public PgStatGetProgressInfo rename(Table<?> name) {
        return new PgStatGetProgressInfo(name.getQualifiedName(), null, parameters);
    }

    public PgStatGetProgressInfo call(
          String cmdtype
    ) {
        PgStatGetProgressInfo result = new PgStatGetProgressInfo(DSL.name("pg_stat_get_progress_info"), null, new Field[] {
            DSL.val(cmdtype, SQLDataType.CLOB)
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }

    public PgStatGetProgressInfo call(
          Field<String> cmdtype
    ) {
        PgStatGetProgressInfo result = new PgStatGetProgressInfo(DSL.name("pg_stat_get_progress_info"), null, new Field[] {
            cmdtype
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }
}
